{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n/**\n * Get a range of download counts for the specified repository.\n * This method returns a stream of raw data\n * in the form of `{ day: '2016-01-10', downloads: 123456 }`.\n *\n * ```js\n * var start = new Date('2016-01-09');\n * var end = new Date('2016-01-10');\n * stats.get(start, end, 'micromatch')\n *   .on('error', console.error)\n *   .on('data', function(data) {\n *     console.log(data);\n *   })\n *   .on('end', function() {\n *     console.log('done.');\n *   });\n * // { day: '2016-01-09', downloads: 53331 }\n * // { day: '2016-01-10', downloads: 47341 }\n * ```\n *\n * @param  {Date} `start` Start date of stream.\n * @param  {Date} `end`   End date of stream.\n * @param  {String} `repo`  Repository to get downloads for. If `repo` is not passed, then all npm downloads for the day will be returned.\n * @return {Stream} Stream of download data.\n * @api public\n */\n\n\nfunction get(start, end, repo) {\n  start = utils.moment.utc(start);\n  end = utils.moment.utc(end);\n  var current = utils.moment.utc(start);\n  var stream = new utils.stream.Stream();\n  run();\n  return stream;\n\n  function run() {\n    process.nextTick(function () {\n      let period = utils.moment.utc(current).add(300, 'days');\n\n      if (period.format('YYYY-MM-DD') >= end.format('YYYY-MM-DD')) {\n        period = utils.moment.utc(end);\n      }\n\n      getPage(current, period, repo).on('error', stream.emit.bind(stream, 'error')).on('data', function (data) {\n        stream.emit('data', data);\n      }).on('end', function () {\n        current.add(300, 'days');\n\n        if (current.format('YYYY-MM-DD') >= end.format('YYYY-MM-DD')) {\n          stream.emit('end');\n          return;\n        }\n\n        run();\n      });\n    });\n  }\n}\n\nfunction getPage(start, end, repo) {\n  var stream = new utils.stream.Stream();\n  var url = 'https://api.npmjs.org/downloads/range/';\n  url += utils.format(start);\n  url += ':' + utils.format(end);\n  url += repo ? '/' + repo : '';\n  var bulk = false;\n\n  if (repo && repo.indexOf(',') > -1) {\n    bulk = true;\n  }\n\n  process.nextTick(function () {\n    var req = utils.https.get(options(url), function (res) {\n      res.on('error', console.error).pipe(utils.JSONStream.parse(bulk ? '*' : 'downloads.*')).on('error', handleError).on('data', function (data) {\n        stream.emit('data', data);\n      }).on('end', stream.emit.bind(stream, 'end'));\n    });\n    req.on('error', stream.emit.bind(stream, 'error'));\n  });\n  return stream;\n\n  function handleError(err) {\n    console.error('handling error', err);\n\n    if (err.message.indexOf('Invalid JSON') >= 0) {\n      handleInvalidJSON();\n      return;\n    }\n\n    stream.emit('error', err);\n  }\n\n  function handleInvalidJSON() {\n    var body = '';\n    utils.https.get(options(url), function (res) {\n      res.on('error', stream.emit.bind('error')).on('data', function (data) {\n        body += data;\n      }).on('end', function () {\n        stream.emit('error', new Error(body));\n      });\n    });\n  }\n}\n/**\n * Get a specific point (all-time, last-month, last-week, last-day)\n *\n * ```js\n * stats.get.period('last-day', 'micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { day: '2016-01-10', downloads: 47341 }\n * ```\n * @param  {String} `period` Period to retrieve downloads for.\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\n\nget.point = function (period, repo, cb) {\n  var url = 'https://api.npmjs.org/downloads/point/';\n  url += period;\n  url += repo ? '/' + repo : '';\n  var results;\n  var req = utils.https.get(options(url), function (res) {\n    res.once('error', console.error).pipe(utils.JSONStream.parse()).once('error', cb).on('data', function (data) {\n      results = data;\n    }).once('end', function () {\n      cb(null, results);\n    });\n  });\n  req.once('error', cb);\n};\n/**\n * Get the all time total downloads for a repository.\n *\n * ```js\n * stats.get.allTime('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { day: '2016-01-10', downloads: 47341 }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\n\nget.allTime = function (repo, cb) {\n  return get.point('all-time', repo, cb);\n};\n/**\n * Get the last month's total downloads for a repository.\n *\n * ```js\n * stats.get.lastMonth('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { downloads: 7750788, start: '2016-10-10', end: '2016-11-08', package: 'micromatch' }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\n\nget.lastMonth = function (repo, cb) {\n  return get.point('last-month', repo, cb);\n};\n/**\n * Get the last week's total downloads for a repository.\n *\n * ```js\n * stats.get.lastWeek('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { downloads: 1777065, start: '2016-11-02', end: '2016-11-08', package: 'micromatch' }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\n\nget.lastWeek = function (repo, cb) {\n  return get.point('last-week', repo, cb);\n};\n/**\n * Get the last day's total downloads for a repository.\n *\n * ```js\n * stats.get.lastDay('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { downloads: 316004, start: '2016-11-08', end: '2016-11-08', package: 'micromatch' }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\n\nget.lastDay = function (repo, cb) {\n  return get.point('last-day', repo, cb);\n};\n\nfunction options(url) {\n  var opts = utils.url.parse(url);\n  opts.headers = {\n    'User-Agent': 'https://github.com/doowb/download-stats'\n  };\n  return opts;\n}\n/**\n * Expose `get`\n */\n\n\nmodule.exports = get;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/node_modules/download-stats/lib/get.js"],"names":["utils","require","get","start","end","repo","moment","utc","current","stream","Stream","run","process","nextTick","period","add","format","getPage","on","emit","bind","data","url","bulk","indexOf","req","https","options","res","console","error","pipe","JSONStream","parse","handleError","err","message","handleInvalidJSON","body","Error","point","cb","results","once","allTime","lastMonth","lastWeek","lastDay","opts","headers","module","exports"],"mappings":"AAAA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC7BF,EAAAA,KAAK,GAAGH,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiBJ,KAAjB,CAAR;AACAC,EAAAA,GAAG,GAAGJ,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiBH,GAAjB,CAAN;AACA,MAAII,OAAO,GAAGR,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiBJ,KAAjB,CAAd;AACA,MAAIM,MAAM,GAAG,IAAIT,KAAK,CAACS,MAAN,CAAaC,MAAjB,EAAb;AACAC,EAAAA,GAAG;AACH,SAAOF,MAAP;;AAEA,WAASE,GAAT,GAAe;AACbC,IAAAA,OAAO,CAACC,QAAR,CAAiB,YAAW;AAC1B,UAAIC,MAAM,GAAGd,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiBC,OAAjB,EAA0BO,GAA1B,CAA8B,GAA9B,EAAmC,MAAnC,CAAb;;AACA,UAAID,MAAM,CAACE,MAAP,CAAc,YAAd,KAA+BZ,GAAG,CAACY,MAAJ,CAAW,YAAX,CAAnC,EAA6D;AAC3DF,QAAAA,MAAM,GAAGd,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiBH,GAAjB,CAAT;AACD;;AAEDa,MAAAA,OAAO,CAACT,OAAD,EAAUM,MAAV,EAAkBT,IAAlB,CAAP,CACGa,EADH,CACM,OADN,EACeT,MAAM,CAACU,IAAP,CAAYC,IAAZ,CAAiBX,MAAjB,EAAyB,OAAzB,CADf,EAEGS,EAFH,CAEM,MAFN,EAEc,UAASG,IAAT,EAAe;AACzBZ,QAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAoBE,IAApB;AACD,OAJH,EAKGH,EALH,CAKM,KALN,EAKa,YAAW;AACpBV,QAAAA,OAAO,CAACO,GAAR,CAAY,GAAZ,EAAiB,MAAjB;;AACA,YAAIP,OAAO,CAACQ,MAAR,CAAe,YAAf,KAAgCZ,GAAG,CAACY,MAAJ,CAAW,YAAX,CAApC,EAA8D;AAC5DP,UAAAA,MAAM,CAACU,IAAP,CAAY,KAAZ;AACA;AACD;;AACDR,QAAAA,GAAG;AACJ,OAZH;AAaD,KAnBD;AAoBD;AACF;;AAED,SAASM,OAAT,CAAiBd,KAAjB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AACjC,MAAII,MAAM,GAAG,IAAIT,KAAK,CAACS,MAAN,CAAaC,MAAjB,EAAb;AACA,MAAIY,GAAG,GAAG,wCAAV;AACAA,EAAAA,GAAG,IAAItB,KAAK,CAACgB,MAAN,CAAab,KAAb,CAAP;AACAmB,EAAAA,GAAG,IAAI,MAAMtB,KAAK,CAACgB,MAAN,CAAaZ,GAAb,CAAb;AACAkB,EAAAA,GAAG,IAAKjB,IAAI,GAAG,MAAMA,IAAT,GAAgB,EAA5B;AAEA,MAAIkB,IAAI,GAAG,KAAX;;AACA,MAAIlB,IAAI,IAAIA,IAAI,CAACmB,OAAL,CAAa,GAAb,IAAoB,CAAC,CAAjC,EAAoC;AAClCD,IAAAA,IAAI,GAAG,IAAP;AACD;;AAEDX,EAAAA,OAAO,CAACC,QAAR,CAAiB,YAAW;AAC1B,QAAIY,GAAG,GAAGzB,KAAK,CAAC0B,KAAN,CAAYxB,GAAZ,CAAgByB,OAAO,CAACL,GAAD,CAAvB,EAA8B,UAASM,GAAT,EAAc;AACpDA,MAAAA,GAAG,CAACV,EAAJ,CAAO,OAAP,EAAgBW,OAAO,CAACC,KAAxB,EACGC,IADH,CACQ/B,KAAK,CAACgC,UAAN,CAAiBC,KAAjB,CAAuBV,IAAI,GAAG,GAAH,GAAS,aAApC,CADR,EAEGL,EAFH,CAEM,OAFN,EAEegB,WAFf,EAGGhB,EAHH,CAGM,MAHN,EAGc,UAASG,IAAT,EAAe;AACzBZ,QAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAoBE,IAApB;AACD,OALH,EAMGH,EANH,CAMM,KANN,EAMaT,MAAM,CAACU,IAAP,CAAYC,IAAZ,CAAiBX,MAAjB,EAAyB,KAAzB,CANb;AAOD,KARS,CAAV;AAUAgB,IAAAA,GAAG,CAACP,EAAJ,CAAO,OAAP,EAAgBT,MAAM,CAACU,IAAP,CAAYC,IAAZ,CAAiBX,MAAjB,EAAyB,OAAzB,CAAhB;AACD,GAZD;AAcA,SAAOA,MAAP;;AAEA,WAASyB,WAAT,CAAqBC,GAArB,EAA0B;AACxBN,IAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgCK,GAAhC;;AACA,QAAIA,GAAG,CAACC,OAAJ,CAAYZ,OAAZ,CAAoB,cAApB,KAAuC,CAA3C,EAA8C;AAC5Ca,MAAAA,iBAAiB;AACjB;AACD;;AACD5B,IAAAA,MAAM,CAACU,IAAP,CAAY,OAAZ,EAAqBgB,GAArB;AACD;;AAED,WAASE,iBAAT,GAA6B;AAC3B,QAAIC,IAAI,GAAG,EAAX;AACAtC,IAAAA,KAAK,CAAC0B,KAAN,CAAYxB,GAAZ,CAAgByB,OAAO,CAACL,GAAD,CAAvB,EAA8B,UAASM,GAAT,EAAc;AAC1CA,MAAAA,GAAG,CACAV,EADH,CACM,OADN,EACeT,MAAM,CAACU,IAAP,CAAYC,IAAZ,CAAiB,OAAjB,CADf,EAEGF,EAFH,CAEM,MAFN,EAEc,UAASG,IAAT,EAAe;AACzBiB,QAAAA,IAAI,IAAIjB,IAAR;AACD,OAJH,EAKGH,EALH,CAKM,KALN,EAKa,YAAW;AACpBT,QAAAA,MAAM,CAACU,IAAP,CAAY,OAAZ,EAAqB,IAAIoB,KAAJ,CAAUD,IAAV,CAArB;AACD,OAPH;AAQD,KATD;AAUD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEApC,GAAG,CAACsC,KAAJ,GAAY,UAAS1B,MAAT,EAAiBT,IAAjB,EAAuBoC,EAAvB,EAA2B;AACrC,MAAInB,GAAG,GAAG,wCAAV;AACAA,EAAAA,GAAG,IAAIR,MAAP;AACAQ,EAAAA,GAAG,IAAKjB,IAAI,GAAG,MAAMA,IAAT,GAAgB,EAA5B;AAEA,MAAIqC,OAAJ;AACA,MAAIjB,GAAG,GAAGzB,KAAK,CAAC0B,KAAN,CAAYxB,GAAZ,CAAgByB,OAAO,CAACL,GAAD,CAAvB,EAA8B,UAASM,GAAT,EAAc;AACpDA,IAAAA,GAAG,CAACe,IAAJ,CAAS,OAAT,EAAkBd,OAAO,CAACC,KAA1B,EACGC,IADH,CACQ/B,KAAK,CAACgC,UAAN,CAAiBC,KAAjB,EADR,EAEGU,IAFH,CAEQ,OAFR,EAEiBF,EAFjB,EAGGvB,EAHH,CAGM,MAHN,EAGc,UAASG,IAAT,EAAe;AACzBqB,MAAAA,OAAO,GAAGrB,IAAV;AACD,KALH,EAMGsB,IANH,CAMQ,KANR,EAMe,YAAW;AACtBF,MAAAA,EAAE,CAAC,IAAD,EAAOC,OAAP,CAAF;AACD,KARH;AASD,GAVS,CAAV;AAYAjB,EAAAA,GAAG,CAACkB,IAAJ,CAAS,OAAT,EAAkBF,EAAlB;AACD,CAnBD;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAvC,GAAG,CAAC0C,OAAJ,GAAc,UAASvC,IAAT,EAAeoC,EAAf,EAAmB;AAC/B,SAAOvC,GAAG,CAACsC,KAAJ,CAAU,UAAV,EAAsBnC,IAAtB,EAA4BoC,EAA5B,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAvC,GAAG,CAAC2C,SAAJ,GAAgB,UAASxC,IAAT,EAAeoC,EAAf,EAAmB;AACjC,SAAOvC,GAAG,CAACsC,KAAJ,CAAU,YAAV,EAAwBnC,IAAxB,EAA8BoC,EAA9B,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAvC,GAAG,CAAC4C,QAAJ,GAAe,UAASzC,IAAT,EAAeoC,EAAf,EAAmB;AAChC,SAAOvC,GAAG,CAACsC,KAAJ,CAAU,WAAV,EAAuBnC,IAAvB,EAA6BoC,EAA7B,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAvC,GAAG,CAAC6C,OAAJ,GAAc,UAAS1C,IAAT,EAAeoC,EAAf,EAAmB;AAC/B,SAAOvC,GAAG,CAACsC,KAAJ,CAAU,UAAV,EAAsBnC,IAAtB,EAA4BoC,EAA5B,CAAP;AACD,CAFD;;AAIA,SAASd,OAAT,CAAiBL,GAAjB,EAAsB;AACpB,MAAI0B,IAAI,GAAGhD,KAAK,CAACsB,GAAN,CAAUW,KAAV,CAAgBX,GAAhB,CAAX;AACA0B,EAAAA,IAAI,CAACC,OAAL,GAAe;AAAC,kBAAc;AAAf,GAAf;AACA,SAAOD,IAAP;AACD;AAED;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBjD,GAAjB","sourcesContent":["'use strict';\nvar utils = require('./utils');\n\n/**\n * Get a range of download counts for the specified repository.\n * This method returns a stream of raw data\n * in the form of `{ day: '2016-01-10', downloads: 123456 }`.\n *\n * ```js\n * var start = new Date('2016-01-09');\n * var end = new Date('2016-01-10');\n * stats.get(start, end, 'micromatch')\n *   .on('error', console.error)\n *   .on('data', function(data) {\n *     console.log(data);\n *   })\n *   .on('end', function() {\n *     console.log('done.');\n *   });\n * // { day: '2016-01-09', downloads: 53331 }\n * // { day: '2016-01-10', downloads: 47341 }\n * ```\n *\n * @param  {Date} `start` Start date of stream.\n * @param  {Date} `end`   End date of stream.\n * @param  {String} `repo`  Repository to get downloads for. If `repo` is not passed, then all npm downloads for the day will be returned.\n * @return {Stream} Stream of download data.\n * @api public\n */\n\nfunction get(start, end, repo) {\n  start = utils.moment.utc(start);\n  end = utils.moment.utc(end);\n  var current = utils.moment.utc(start);\n  var stream = new utils.stream.Stream();\n  run();\n  return stream;\n\n  function run() {\n    process.nextTick(function() {\n      let period = utils.moment.utc(current).add(300, 'days');\n      if (period.format('YYYY-MM-DD') >= end.format('YYYY-MM-DD')) {\n        period = utils.moment.utc(end);\n      }\n\n      getPage(current, period, repo)\n        .on('error', stream.emit.bind(stream, 'error'))\n        .on('data', function(data) {\n          stream.emit('data', data);\n        })\n        .on('end', function() {\n          current.add(300, 'days');\n          if (current.format('YYYY-MM-DD') >= end.format('YYYY-MM-DD')) {\n            stream.emit('end');\n            return;\n          }\n          run();\n        });\n    });\n  }\n}\n\nfunction getPage(start, end, repo) {\n  var stream = new utils.stream.Stream();\n  var url = 'https://api.npmjs.org/downloads/range/';\n  url += utils.format(start);\n  url += ':' + utils.format(end);\n  url += (repo ? '/' + repo : '');\n\n  var bulk = false;\n  if (repo && repo.indexOf(',') > -1) {\n    bulk = true;\n  }\n\n  process.nextTick(function() {\n    var req = utils.https.get(options(url), function(res) {\n      res.on('error', console.error)\n        .pipe(utils.JSONStream.parse(bulk ? '*' : 'downloads.*'))\n        .on('error', handleError)\n        .on('data', function(data) {\n          stream.emit('data', data);\n        })\n        .on('end', stream.emit.bind(stream, 'end'));\n    });\n\n    req.on('error', stream.emit.bind(stream, 'error'));\n  });\n\n  return stream;\n\n  function handleError(err) {\n    console.error('handling error', err);\n    if (err.message.indexOf('Invalid JSON') >= 0) {\n      handleInvalidJSON();\n      return;\n    }\n    stream.emit('error', err);\n  }\n\n  function handleInvalidJSON() {\n    var body = '';\n    utils.https.get(options(url), function(res) {\n      res\n        .on('error', stream.emit.bind('error'))\n        .on('data', function(data) {\n          body += data;\n        })\n        .on('end', function() {\n          stream.emit('error', new Error(body));\n        });\n    });\n  }\n}\n\n/**\n * Get a specific point (all-time, last-month, last-week, last-day)\n *\n * ```js\n * stats.get.period('last-day', 'micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { day: '2016-01-10', downloads: 47341 }\n * ```\n * @param  {String} `period` Period to retrieve downloads for.\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\nget.point = function(period, repo, cb) {\n  var url = 'https://api.npmjs.org/downloads/point/';\n  url += period;\n  url += (repo ? '/' + repo : '');\n\n  var results;\n  var req = utils.https.get(options(url), function(res) {\n    res.once('error', console.error)\n      .pipe(utils.JSONStream.parse())\n      .once('error', cb)\n      .on('data', function(data) {\n        results = data;\n      })\n      .once('end', function() {\n        cb(null, results);\n      });\n  });\n\n  req.once('error', cb);\n};\n\n/**\n * Get the all time total downloads for a repository.\n *\n * ```js\n * stats.get.allTime('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { day: '2016-01-10', downloads: 47341 }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\nget.allTime = function(repo, cb) {\n  return get.point('all-time', repo, cb);\n};\n\n/**\n * Get the last month's total downloads for a repository.\n *\n * ```js\n * stats.get.lastMonth('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { downloads: 7750788, start: '2016-10-10', end: '2016-11-08', package: 'micromatch' }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\nget.lastMonth = function(repo, cb) {\n  return get.point('last-month', repo, cb);\n};\n\n/**\n * Get the last week's total downloads for a repository.\n *\n * ```js\n * stats.get.lastWeek('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { downloads: 1777065, start: '2016-11-02', end: '2016-11-08', package: 'micromatch' }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\nget.lastWeek = function(repo, cb) {\n  return get.point('last-week', repo, cb);\n};\n\n/**\n * Get the last day's total downloads for a repository.\n *\n * ```js\n * stats.get.lastDay('micromatch', function(err, results) {\n *   if (err) return console.error(err);\n *   console.log(results);\n * });\n * // { downloads: 316004, start: '2016-11-08', end: '2016-11-08', package: 'micromatch' }\n * ```\n * @param  {String} `repo` Repository to retrieve downloads for.\n * @param  {Function} `cb` Callback function to get results\n * @api public\n */\n\nget.lastDay = function(repo, cb) {\n  return get.point('last-day', repo, cb);\n};\n\nfunction options(url) {\n  var opts = utils.url.parse(url);\n  opts.headers = {'User-Agent': 'https://github.com/doowb/download-stats'};\n  return opts;\n}\n\n/**\n * Expose `get`\n */\n\nmodule.exports = get;\n"]},"metadata":{},"sourceType":"script"}