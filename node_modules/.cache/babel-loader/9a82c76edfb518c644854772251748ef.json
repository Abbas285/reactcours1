{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\fileupload\\\\fileupload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFQDN = require('get-fqdn');\n\nvar NpmApi = require('npm-api');\n\nexport class fileupload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textfile: '',\n      ipdaddress: \"\",\n      hostname: \"\",\n      systemhostname: \"\",\n      systemhostname2: \"\",\n      hostname: '',\n      ipdaddress12: \"\"\n    };\n\n    this.uploadfile = e => {\n      let file = e.target.files;\n      let reder = new FileReader();\n      reder.readAsText(file[0]);\n\n      reder.onload = e => {\n        // const file=e.target.result.split(/\\r\\n|\\n/).join('\\n');\n        this.setState({\n          textfile: e.target.result\n        });\n      }; // console.log(\"files\",files)\n\n    };\n\n    this.GetComputerName = () => {\n      var network = window.ActiveXObject(); // Show a pop up if it works\n\n      console.log(network);\n    };\n\n    this.getips = async () => {\n      const res = await axios.get('https://geolocation-db.com/json/');\n      console.log(\"responce data\", res.data);\n      var windowhost = window.location.protocol + \"//\" + window.location.host;\n      let ab = document.location;\n      console.log(\"locotion\", document.location);\n      this.setState({\n        ipdaddress: res.data.IPv4,\n        hostname: windowhost,\n        systemhostname: ab.host\n      });\n    };\n  }\n\n  render() {\n    const {\n      textfile\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"get IP Address = \", this.state.ipdaddress, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 58\n          }, this), \"windowhost host name + window protocol =  \", this.state.hostname, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), \" current hostname\", this.state.hostname, \" and ip address \", this.state.ipdaddress12, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 97\n          }, this), \"system host name=  \", this.state.systemhostname2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 60\n          }, this), \"system host name2 =  \", this.state.systemhostname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getips,\n          children: \"get ipaddress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.GetComputerName,\n          children: \"get name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default fileupload;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/fileupload/fileupload.js"],"names":["React","Component","axios","getFQDN","require","NpmApi","fileupload","state","textfile","ipdaddress","hostname","systemhostname","systemhostname2","ipdaddress12","uploadfile","e","file","target","files","reder","FileReader","readAsText","onload","setState","result","GetComputerName","network","window","ActiveXObject","console","log","getips","res","get","data","windowhost","location","protocol","host","ab","document","IPv4","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nconst getFQDN = require('get-fqdn');\r\n\r\nvar NpmApi = require('npm-api');\r\nexport class fileupload extends Component {\r\n    state={\r\ntextfile:'',\r\nipdaddress:\"\",\r\nhostname:\"\",\r\nsystemhostname:\"\",\r\nsystemhostname2:\"\",\r\nhostname:'',\r\nipdaddress12:\"\"\r\n\r\n    }\r\n    uploadfile=(e)=>{\r\n        let file=e.target.files;\r\n        let reder=new FileReader();\r\n        reder.readAsText(file[0]);\r\n        reder.onload=e=>{\r\n            // const file=e.target.result.split(/\\r\\n|\\n/).join('\\n');\r\n            this.setState({\r\n                textfile:e.target.result\r\n            })\r\n        }\r\n       \r\n        // console.log(\"files\",files)\r\n    }\r\n  \r\n    GetComputerName=()=>{\r\n        var network =  window.ActiveXObject();\r\n        // Show a pop up if it works\r\n        console.log(network)\r\n    }\r\n\r\n    getips = async () => {\r\n        const res = await axios.get('https://geolocation-db.com/json/')\r\n        console.log(\"responce data\",res.data);\r\n        var windowhost   = window.location.protocol + \"//\" + window.location.host;\r\n        let ab=document.location;\r\n        console.log(\"locotion\",document.location)\r\n        this.setState({\r\n            ipdaddress:res.data.IPv4,\r\n            hostname:windowhost,\r\n            systemhostname:ab.host\r\n        })\r\n      }\r\n    render() {\r\n        const {textfile}=this.state\r\n        return (\r\n            <div>\r\n\r\n        \r\n        <div>\r\n            <h1>get IP Address = {this.state.ipdaddress} <br/>\r\n            windowhost host name + window protocol =  {this.state.hostname}<br/>\r\n            <br/> current hostname{this.state.hostname} and ip address {this.state.ipdaddress12}<br/>\r\n            system host name=  {this.state.systemhostname2}<br/>\r\n            system host name2 =  {this.state.systemhostname}</h1> \r\n            <button onClick={this.getips}>get ipaddress</button>\r\n            <button onClick={this.GetComputerName}>get name</button>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}         \r\n    \r\n}\r\n\r\nexport default fileupload\r\n"]},"metadata":{},"sourceType":"module"}