{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy, usePagination } from 'react-table';\nimport Mockdata from './MOCK_DATA (1).json';\nimport { COLUMN } from './column';\nimport './tablecss.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const columns = useMemo(() => COLUMN, []);\n  const data = useMemo(() => Mockdata, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy, usePagination);\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column =>\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"v6S2iIbE4v/SFkAloKsI4AfcOms=\", false, function () {\n  return [useTable];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/form/Form.js"],"names":["React","useMemo","useTable","useSortBy","usePagination","Mockdata","COLUMN","Form","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,EAAkBC,SAAlB,EAA4BC,aAA5B,QAAkD,aAAlD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,gBAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAMC,OAAO,GAAGP,OAAO,CAAC,MAAMK,MAAP,EAAe,EAAf,CAAvB;AACA,QAAMG,IAAI,GAAGR,OAAO,CAAC,MAAMI,QAAP,EAAiB,EAAjB,CAApB;AAEA,QAAM;AACJK,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAOHZ,QAAQ,CAAC;AAACM,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAD,EAAmBN,SAAnB,EAA6BC,aAA7B,CAPX;AAUA,sBACE,sBAAWM,aAAa,EAAxB;AAAA,4BACG;AAAA,gBACIE,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBAC3B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM;AAAA;AAC7B;AACA;AACA,2BAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA,qBACGF,MAAM,CAACG,MAAP,CAAc,QAAd,CADH,eAGE;AAAA,sBACGH,MAAM,CAACI,QAAP,GACGJ,MAAM,CAACK,YAAP,GACE,KADF,GAEE,KAHL,GAIG;AALN;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,eAsBE,sBAAWb,iBAAiB,EAA5B;AAAA,gBACIE,IAAI,CAACE,GAAL,CAASU,GAAG,IAAI;AACfX,QAAAA,UAAU,CAACW,GAAD,CAAV;AACA,4BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACGD,GAAG,CAACE,KAAJ,CAAUZ,GAAV,CAAca,IAAI,IAAI;AACrB,gCACE,mBACMA,IAAI,CAACC,YAAL,EADN;AAAA,wBAIGD,IAAI,CAACN,MAAL,CAAY,MAAZ;AAJH;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAhBA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD;;GAvEQf,I;UAWJL,Q;;;KAXIK,I;AAyET,eAAeA,IAAf","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useTable,useSortBy,usePagination  } from 'react-table'\r\nimport Mockdata from './MOCK_DATA (1).json'\r\nimport { COLUMN } from './column'\r\nimport './tablecss.css'\r\n\r\nfunction Form() {\r\n  const columns = useMemo(() => COLUMN, [])\r\n  const data = useMemo(() => Mockdata, [])\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n\r\n  }= useTable({columns, data  },useSortBy,usePagination)\r\n    \r\n \r\n  return (\r\n    <table {...getTableProps()}>\r\n       <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                // Add the sorting props to control sorting. For this example\r\n                // we can add them into the header props\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  {/* Add a sort direction indicator */}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ðŸ”½'\r\n                        : ' ðŸ”¼'\r\n                      : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n         {rows.map(row => {\r\n           prepareRow(row)\r\n           return (\r\n             <tr {...row.getRowProps()}>\r\n               {row.cells.map(cell => {\r\n                 return (\r\n                   <td\r\n                     {...cell.getCellProps()}\r\n                \r\n                   >\r\n                     {cell.render('Cell')}\r\n                   </td>\r\n                 )\r\n               })}\r\n             </tr>\r\n           )\r\n         })}\r\n       </tbody>\r\n       {/* <tfoot>\r\n         {\r\n           footerGroups.map((footerGroups)=>(\r\n             <tr {...footerGroups.getFooterGroupProps()}>{\r\n               footerGroups.headers.map((column)=>{\r\n                 return <td {...column.getFooterProps}>{column.render('Footer')}</td>\r\n               })\r\n             }\r\n               </tr>\r\n           ))\r\n         }\r\n\r\n       </tfoot> */}\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}