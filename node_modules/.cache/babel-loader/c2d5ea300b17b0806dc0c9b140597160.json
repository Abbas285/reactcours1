{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\authentication\\\\index.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class index extends Component {\n  constructor() {\n    super();\n\n    this.checkitem = (index, value) => {\n      const itemselect = [...this.state.multipleitem];\n      const model = [...this.state.multiplevalue];\n      const indexs = model.indexOf(value);\n      model[indexs].ischeck = !model[indexs].ischeck;\n\n      if (model[indexs].ischeck === true) {\n        itemselect.push(value);\n      } else {\n        itemselect.pop(value);\n      }\n\n      this.setState({\n        multiplevalue: model,\n        multipleitem: itemselect\n      }, () => {\n        console.log(\"slected value\", this.state.multipleitem);\n      });\n    };\n\n    this.allcheckbox = e => {\n      const model = [...this.state.multiplevalue];\n      const itemselect = [...this.state.multipleitem];\n      model.map(value => {\n        value.ischeck = !value.ischeck;\n      });\n      let checkvalue = model.every(value => {\n        return value.ischeck === true;\n      });\n\n      if (checkvalue) {\n        model.map(value => {\n          itemselect.push(value);\n        });\n      } else {\n        model.map(value => {\n          itemselect.pop(value);\n        });\n      }\n\n      this.setState({\n        multiplevalue: model,\n        multipleitem: itemselect\n      });\n    };\n\n    this.multiplevalue = [{\n      id: 1,\n      cityname: \"islamabad\"\n    }, {\n      id: 2,\n      cityname: \"Lahore\"\n    }, {\n      id: 3,\n      cityname: \"Mansehra\"\n    }, {\n      id: 4,\n      cityname: \"Abbottabad\"\n    }];\n    this.state = {\n      multiplevalue: this.multiplevalue,\n      multipleitem: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"60px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"parent\",\n        id: \"parent\",\n        onClick: this.allcheckbox,\n        checked: this.state.multiplevalue.every(user => user.ischeck === true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"parent\",\n        children: \"all checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), this.state.multiplevalue.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: value.cityname,\n            id: value.cityname,\n            onClick: () => this.checkitem(index, value),\n            checked: value.ischeck ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: value.cityname,\n            children: value.cityname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 6\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/authentication/index.js"],"names":["React","Component","index","constructor","checkitem","value","itemselect","state","multipleitem","model","multiplevalue","indexs","indexOf","ischeck","push","pop","setState","console","log","allcheckbox","e","map","checkvalue","every","id","cityname","render","marginTop","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class index extends Component {\r\n  constructor(){\r\n    super()\r\n    this.multiplevalue=[\r\n{id:1,cityname:\"islamabad\"},\r\n{id:2,cityname:\"Lahore\"},\r\n{id:3,cityname:\"Mansehra\"},\r\n{id:4,cityname:\"Abbottabad\"}]\r\n\r\n    this.state={\r\n      multiplevalue:this.multiplevalue,\r\n      multipleitem:[]\r\n    }\r\n  }\r\n  checkitem=(index,value)=>{\r\nconst itemselect=[...this.state.multipleitem]\r\nconst model=[...this.state.multiplevalue]\r\nconst indexs=model.indexOf(value)\r\nmodel[indexs].ischeck=!model[indexs].ischeck\r\n\r\nif(model[indexs].ischeck===true){\r\n  itemselect.push(value)\r\n}\r\nelse{\r\n  itemselect.pop(value)\r\n}\r\n\r\n\r\nthis.setState({\r\n  multiplevalue:model,\r\n  multipleitem:itemselect\r\n},()=>{\r\n  console.log(\"slected value\",this.state.multipleitem)\r\n})\r\n\r\n  }\r\n\r\n  allcheckbox=(e)=>{\r\n    const model=[...this.state.multiplevalue]\r\n    const itemselect=[...this.state.multipleitem]\r\n    \r\n    model.map((value)=>{\r\n      value.ischeck=!value.ischeck\r\n    })\r\n    let checkvalue=model.every((value)=>{\r\n      return value.ischeck===true\r\n    })\r\n\r\n\r\nif(checkvalue){\r\n  model.map((value)=>{\r\nitemselect.push(value)\r\n  })\r\n}\r\nelse{\r\n  model.map((value)=>{\r\n    itemselect.pop(value)\r\n      })\r\n}\r\n    this.setState({\r\n      multiplevalue: model,\r\n      multipleitem:itemselect\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{marginTop:\"60px\"}}>\r\n      <input type=\"checkbox\" name=\"parent\" id=\"parent\" \r\n      onClick={this.allcheckbox} \r\n      checked={this.state.multiplevalue.every(user=>user.ischeck===true)}/>\r\n     <label htmlFor=\"parent\">all checkbox</label>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        {\r\n          this.state.multiplevalue.map((value,index)=>{\r\n            return <React.Fragment key={index}>   \r\n     <input type=\"checkbox\" name={value.cityname} \r\n     id={value.cityname} \r\n     onClick={()=>this.checkitem(index,value)} \r\n     checked={value.ischeck?true:false} />\r\n\r\n     <label htmlFor={value.cityname}>{value.cityname}</label>\r\n     <br/>\r\n            </React.Fragment> \r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default index\r\n\r\n"]},"metadata":{},"sourceType":"module"}