{"ast":null,"code":"'use strict';\n\nconst List = require('../list');\n\nconst View = require('../view');\n\nconst Registry = require('../registry');\n\nconst define = (obj, name, value) => Reflect.defineProperty(obj, name, {\n  value\n});\n/**\n * Base model to include common plugins.\n *\n * @param {Object} `store` Cache store instance to use.\n * @name BaseModel\n * @api public\n */\n\n\nclass BaseModel {\n  constructor(options = {}) {\n    this.options = { ...options\n    };\n    this.cache = new Map();\n    define(this, 'List', List);\n    define(this, 'View', View);\n    define(this, 'Registry', Registry);\n  }\n\n  use(fn) {\n    fn.call(this, this, this.options);\n  }\n\n}\n/**\n * Exposes `BaseModel`\n */\n\n\nmodule.exports = BaseModel;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/node_modules/npm-api/lib/models/base.js"],"names":["List","require","View","Registry","define","obj","name","value","Reflect","defineProperty","BaseModel","constructor","options","cache","Map","use","fn","call","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAApB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AAEA,MAAMG,MAAM,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,KAAsBC,OAAO,CAACC,cAAR,CAAuBJ,GAAvB,EAA4BC,IAA5B,EAAkC;AAAEC,EAAAA;AAAF,CAAlC,CAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMG,SAAN,CAAgB;AACdC,EAAAA,WAAW,CAACC,OAAO,GAAG,EAAX,EAAe;AACxB,SAAKA,OAAL,GAAe,EAAE,GAAGA;AAAL,KAAf;AACA,SAAKC,KAAL,GAAa,IAAIC,GAAJ,EAAb;AACAV,IAAAA,MAAM,CAAC,IAAD,EAAO,MAAP,EAAeJ,IAAf,CAAN;AACAI,IAAAA,MAAM,CAAC,IAAD,EAAO,MAAP,EAAeF,IAAf,CAAN;AACAE,IAAAA,MAAM,CAAC,IAAD,EAAO,UAAP,EAAmBD,QAAnB,CAAN;AACD;;AAEDY,EAAAA,GAAG,CAACC,EAAD,EAAK;AACNA,IAAAA,EAAE,CAACC,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoB,KAAKL,OAAzB;AACD;;AAXa;AAchB;AACA;AACA;;;AAEAM,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["'use strict';\n\nconst List = require('../list');\nconst View = require('../view');\nconst Registry = require('../registry');\n\nconst define = (obj, name, value) => Reflect.defineProperty(obj, name, { value });\n\n/**\n * Base model to include common plugins.\n *\n * @param {Object} `store` Cache store instance to use.\n * @name BaseModel\n * @api public\n */\n\nclass BaseModel {\n  constructor(options = {}) {\n    this.options = { ...options };\n    this.cache = new Map();\n    define(this, 'List', List);\n    define(this, 'View', View);\n    define(this, 'Registry', Registry);\n  }\n\n  use(fn) {\n    fn.call(this, this, this.options);\n  }\n}\n\n/**\n * Exposes `BaseModel`\n */\n\nmodule.exports = BaseModel;\n"]},"metadata":{},"sourceType":"script"}