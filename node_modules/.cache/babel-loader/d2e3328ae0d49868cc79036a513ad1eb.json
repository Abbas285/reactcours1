{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\Advanced Javascript\\\\Iteratorobj.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Iteratorobj extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.Iteratorfunction = () => {\n      let number = [100, 200, 300];\n      let itrators = number[Symbol.iterator](); // console.log(itrators.next())\n      // console.log(itrators.next().value)\n      // console.log(itrators.next())\n      // console.log(itrators.next().done)\n\n      let result = itrators.next();\n\n      while (!result.done) {\n        console.log(result.value);\n        result = itrators.next();\n      }\n    };\n\n    this.iteratorSymbol = arr => {\n      let nextNumer = 0;\n      return {\n        next() {\n          if (nextNumer < arr.length) {\n            return {\n              value: arr[nextNumer++],\n              done: false\n            };\n          } else {\n            return {\n              value: arr[nextNumer++],\n              done: true\n            };\n          }\n        }\n\n      };\n    };\n\n    this.anotherIteratorfunction = () => {\n      let number = [100, 200, 300];\n      let iteratiorvalue = this.iteratorSymbol(number);\n      console.log(iteratiorvalue.next());\n      console.log(iteratiorvalue.next());\n      console.log(iteratiorvalue.next());\n      console.log(iteratiorvalue.next());\n    };\n  }\n\n  componentDidMount() {\n    // this.Iteratorfunction()\n    this.anotherIteratorfunction();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Itrators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Iteratorobj;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/Advanced Javascript/Iteratorobj.js"],"names":["React","Component","Iteratorobj","Iteratorfunction","number","itrators","Symbol","iterator","result","next","done","console","log","value","iteratorSymbol","arr","nextNumer","length","anotherIteratorfunction","iteratiorvalue","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,OAAO,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAG3CE,gBAH2C,GAG1B,MAAI;AACjB,UAAIC,MAAM,GAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAX;AACA,UAAIC,QAAQ,GAACD,MAAM,CAACE,MAAM,CAACC,QAAR,CAAN,EAAb,CAFiB,CAGjB;AACA;AACA;AACA;;AACA,UAAIC,MAAM,GAAEH,QAAQ,CAACI,IAAT,EAAZ;;AAGA,aAAM,CAACD,MAAM,CAACE,IAAd,EAAmB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,KAAnB;AACAL,QAAAA,MAAM,GAAEH,QAAQ,CAACI,IAAT,EAAR;AACH;AACJ,KAjB0C;;AAAA,SAmB3CK,cAnB2C,GAmB3BC,GAAD,IAAO;AAClB,UAAIC,SAAS,GAAC,CAAd;AACD,aAAO;AACNP,QAAAA,IAAI,GAAE;AACF,cAAGO,SAAS,GAACD,GAAG,CAACE,MAAjB,EAAwB;AACpB,mBAAM;AACFJ,cAAAA,KAAK,EAACE,GAAG,CAACC,SAAS,EAAV,CADP;AAEFN,cAAAA,IAAI,EAAC;AAFH,aAAN;AAIH,WALD,MAMI;AACA,mBAAM;AACFG,cAAAA,KAAK,EAACE,GAAG,CAACC,SAAS,EAAV,CADP;AAEFN,cAAAA,IAAI,EAAC;AAFH,aAAN;AAKH;AAGA;;AAjBC,OAAP;AAmBF,KAxC0C;;AAAA,SA0C3CQ,uBA1C2C,GA0CnB,MAAI;AACxB,UAAId,MAAM,GAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAX;AACA,UAAIe,cAAc,GAAC,KAAKL,cAAL,CAAoBV,MAApB,CAAnB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYO,cAAc,CAACV,IAAf,EAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYO,cAAc,CAACV,IAAf,EAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYO,cAAc,CAACV,IAAf,EAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYO,cAAc,CAACV,IAAf,EAAZ;AAEH,KAlD0C;AAAA;;AAoDvCW,EAAAA,iBAAiB,GAAE;AAEf;AACA,SAAKF,uBAAL;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/DsC;AAkE3C,eAAenB,WAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport class Iteratorobj extends Component {\r\n\r\n\r\nIteratorfunction=()=>{\r\n    let number=[100,200,300]\r\n    let itrators=number[Symbol.iterator]()\r\n    // console.log(itrators.next())\r\n    // console.log(itrators.next().value)\r\n    // console.log(itrators.next())\r\n    // console.log(itrators.next().done)\r\n    let result =itrators.next()\r\n\r\n\r\n    while(!result.done){\r\n        console.log(result.value)\r\n        result =itrators.next()\r\n    }\r\n}\r\n\r\niteratorSymbol=(arr)=>{\r\n    let nextNumer=0;\r\n   return {\r\n    next(){\r\n        if(nextNumer<arr.length){\r\n            return{\r\n                value:arr[nextNumer++],\r\n                done:false\r\n            }    \r\n        }\r\n        else{\r\n            return{\r\n                value:arr[nextNumer++],\r\n                done:true\r\n            }    \r\n\r\n        }\r\n      \r\n\r\n        }\r\n   }\r\n}\r\n\r\nanotherIteratorfunction=()=>{\r\n    let number=[100,200,300]\r\n    let iteratiorvalue=this.iteratorSymbol(number)\r\n    console.log(iteratiorvalue.next())\r\n    console.log(iteratiorvalue.next())\r\n    console.log(iteratiorvalue.next())\r\n    console.log(iteratiorvalue.next())\r\n\r\n}\r\n\r\n    componentDidMount(){\r\n\r\n        // this.Iteratorfunction()\r\n        this.anotherIteratorfunction()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Itrators</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Iteratorobj\r\n"]},"metadata":{},"sourceType":"module"}