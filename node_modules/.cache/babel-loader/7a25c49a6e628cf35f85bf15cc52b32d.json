{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\authentication\\\\index.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Testing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        inputvalue: e.target.value\n      });\n    };\n\n    this.addData = e => {\n      const value = this.state.inputvalue;\n      const dobj = Object.assign({\n        value,\n        checked: false\n      });\n      this.setState({\n        data: [...this.state.data, dobj],\n        inputvalue: ''\n      });\n    };\n\n    this.handleSingleChange = e => {\n      let dd = this.state.data;\n      dd.forEach(element => {\n        if (element.value === e.target.value) {\n          element.checked = !element.checked;\n        }\n      });\n      this.setState({\n        data: dd\n      });\n    };\n\n    this.handleallCheckbox = e => {\n      let dd = this.state.data;\n      dd.forEach(element => {\n        element.checked = !element.checked;\n      });\n      this.setState({\n        data: dd,\n        allChecked: !this.state.allChecked\n      });\n    };\n\n    this.editCase = row => {\n      this.setState({\n        inputvalue: row.value\n      });\n    };\n\n    this.deleteCase = index => {\n      let delArr = [...this.state.data];\n      delArr.splice(index, 1);\n      this.setState({\n        data: delArr\n      });\n    };\n\n    this.saveCase = index => {\n      const arraymodel = [...this.state.data];\n      arraymodel[index] = this.state.inputvalue;\n      this.setState({\n        data: arraymodel\n      });\n    };\n\n    this.state = {\n      inputvalue: '',\n      data: [],\n      allChecked: false\n    };\n  }\n\n  render() {\n    const {\n      fname,\n      item,\n      data,\n      modal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: this.state.inputvalue,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addData,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isChecked\",\n        value: this.state.allChecked,\n        onChange: this.handleallCheckbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), data && data.map((row, index) => (console.log('row.name', row), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: row.value,\n            onChange: this.handleSingleChange,\n            checked: row.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.editCase(row),\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.deleteCase(index),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.saveCase(index),\n              children: \"save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }, this)\n      }, void 0, false)))]\n    }, void 0, true);\n  }\n\n}\n\nexport default Testing;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/authentication/index.js"],"names":["React","Component","Testing","constructor","props","handleChange","e","setState","inputvalue","target","value","addData","state","dobj","Object","assign","checked","data","handleSingleChange","dd","forEach","element","handleallCheckbox","allChecked","editCase","row","deleteCase","index","delArr","splice","saveCase","arraymodel","render","fname","item","modal","map","console","log"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\n\r\nclass Testing extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      inputvalue: '',\r\n      data: [],\r\n      allChecked: false,\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    \r\n    this.setState({\r\n      inputvalue: e.target.value,\r\n    })\r\n  }\r\n  addData = (e) => {\r\n    const value = this.state.inputvalue\r\n    const dobj = Object.assign({ value, checked: false })\r\n    this.setState({\r\n      data: [...this.state.data, dobj],\r\n      inputvalue:''\r\n    })\r\n  }\r\n\r\n  handleSingleChange = (e) => {\r\n    let dd = this.state.data\r\n    dd.forEach((element) => {\r\n      if (element.value === e.target.value) {\r\n        element.checked = !element.checked\r\n      }\r\n    })\r\n    this.setState({\r\n      data: dd,\r\n    })\r\n  }\r\n\r\n  handleallCheckbox = (e) => {\r\n    let dd = this.state.data\r\n    dd.forEach((element) => {\r\n      element.checked = !element.checked\r\n    })\r\n    this.setState({\r\n      data: dd,\r\n      allChecked: !this.state.allChecked,\r\n    })\r\n  }\r\n\r\n  editCase = (row) => {\r\n    this.setState({\r\n      inputvalue:row.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n  deleteCase = (index) => {\r\n    let delArr = [...this.state.data]\r\n    delArr.splice(index, 1)\r\n    this.setState({\r\n      data: delArr,\r\n    })\r\n  }\r\n\r\n  saveCase = (index) => {\r\n      const arraymodel=[...this.state.data]\r\n      arraymodel[index]=this.state.inputvalue\r\n      this.setState({\r\n          \r\n         data:arraymodel\r\n      \r\n     \r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { fname, item, data, modal } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div>\r\n            <label>Enter Name</label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.inputvalue}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <button onClick={this.addData}>Add</button>\r\n        </div>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isChecked\"\r\n          value={this.state.allChecked}\r\n          onChange={this.handleallCheckbox}\r\n        />\r\n        <label> All</label>\r\n        {data &&\r\n          data.map(\r\n            (row, index) => (\r\n              console.log('row.name', row),\r\n              (\r\n                <>\r\n                  <tr key={index}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={row.value}\r\n                      onChange={this.handleSingleChange}\r\n                      checked={row.checked}\r\n                    />\r\n                    <label> </label>\r\n                    <td>{row.value}</td>\r\n                    <td>\r\n                      <button onClick={() => this.editCase(row)}>edit</button>\r\n                    </td>\r\n                    <td>\r\n                      <button onClick={() => this.deleteCase(index)}>\r\n                        delete\r\n                      </button>\r\n                    </td>\r\n                    <td>\r\n                      <button onClick={() => this.saveCase(index)}>save</button>\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )\r\n            ),\r\n          )}\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Testing\r\n"]},"metadata":{},"sourceType":"module"}