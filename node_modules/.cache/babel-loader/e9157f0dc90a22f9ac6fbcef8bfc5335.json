{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\slect multiple check boxes\\\\Selectmultiplecheckboxes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet multiplecheck = [{\n  id: 1,\n  city: \"Karachi\"\n}, {\n  id: 2,\n  city: \"Islamabad\"\n}, {\n  id: 3,\n  city: \"Lahore\"\n}, {\n  id: 4,\n  city: \"Rawalpindi\"\n}, {\n  id: 5,\n  city: \"Peshawar\"\n}, {\n  id: 6,\n  city: \"Faisalabad\"\n}, {\n  id: 7,\n  city: \"Multan\"\n}];\n\nfunction Selectmultiplecheckboxes() {\n  _s();\n\n  const [users, setuser] = useState([]);\n  useEffect(() => {\n    setuser(multiplecheck);\n  }, []);\n\n  const handleselect = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n\n    if (name === \"allselect\") {\n      let tempuser = users.map(user => {\n        return { ...user,\n          isChecked: checked\n        };\n      });\n      setuser(tempuser);\n    } else {\n      let tempuser = users.map(user => user.name === name ? { ...user,\n        isChecked: checked\n      } : user);\n      setuser(tempuser);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Selecte multiple checkboxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"allselect\",\n          checked: !users.some(user => (user === null || user === void 0 ? void 0 : user.isChecked) !== true),\n          onChange: handleselect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"All Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: users.map((row, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: row.city,\n            checked: (row === null || row === void 0 ? void 0 : row.isChecked) || false,\n            onChange: handleselect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label ms-2\",\n            children: row.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 6\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Selectmultiplecheckboxes, \"VRelqKxigRr/yXyyQEnvYUTjLLE=\");\n\n_c = Selectmultiplecheckboxes;\nexport default Selectmultiplecheckboxes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selectmultiplecheckboxes\");","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/slect multiple check boxes/Selectmultiplecheckboxes.js"],"names":["React","useState","useEffect","multiplecheck","id","city","Selectmultiplecheckboxes","users","setuser","handleselect","e","name","checked","target","tempuser","map","user","isChecked","some","row"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nlet multiplecheck=[\r\n    {id:1,city:\"Karachi\"},\r\n    {id:2,city:\"Islamabad\"},\r\n    {id:3,city:\"Lahore\"},\r\n    {id:4,city:\"Rawalpindi\"},\r\n    {id:5,city:\"Peshawar\"},\r\n    {id:6,city:\"Faisalabad\"},\r\n    {id:7,city:\"Multan\"},\r\n]\r\nfunction Selectmultiplecheckboxes() {\r\n    const [users,setuser]=useState([])\r\n\r\n    useEffect(()=>{\r\n        setuser(multiplecheck)\r\n    },[])\r\n\r\n    const handleselect =(e)=>{\r\n        const {name,checked}=e.target\r\n\r\nif(name ===\"allselect\"){\r\n    let tempuser = users.map((user)=>{\r\n        return {...user,isChecked:checked};\r\n    });\r\n    setuser(tempuser)  \r\n\r\n}else{\r\n    let tempuser=users.map((user)=>\r\n    user.name === name ? {...user,isChecked:checked}:user\r\n    )\r\n    setuser(tempuser)\r\n}  \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h4>Selecte multiple checkboxes</h4>\r\n            <form className=\"form\">\r\n            <div className=\"form-check\">\r\n                <input\r\n                type=\"checkbox\"\r\n                name=\"allselect\"\r\n                checked={!users.some((user) => user?.isChecked !== true)}\r\n                onChange={handleselect}\r\n                />\r\n                 <label>All Select</label>\r\n            </div>\r\n   <div>\r\n{\r\n   users.map((row,id)=>(\r\n    <div className=\"form-check\" key={id}>\r\n    <input\r\n    type=\"checkbox\"\r\n    name={row.city}\r\n    checked={row?.isChecked || false}\r\n    onChange={handleselect}\r\n    />\r\n     <label className=\"form-check-label ms-2\">{row.city}</label>\r\n</div>\r\n      \r\n ))}\r\n  \r\n</div>\r\n</form>          \r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selectmultiplecheckboxes\r\n"]},"metadata":{},"sourceType":"module"}