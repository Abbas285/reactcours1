{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\fileupload\\\\fileupload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFQDN = require('get-fqdn');\n\nvar NpmApi = require('npm-api');\n\nexport class fileupload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textfile: '',\n      ipdaddress: \"\",\n      hostname: \"\",\n      systemhostname: \"\",\n      systemhostname2: \"\"\n    };\n\n    this.uploadfile = e => {\n      let file = e.target.files;\n      let reder = new FileReader();\n      reder.readAsText(file[0]);\n\n      reder.onload = e => {\n        // const file=e.target.result.split(/\\r\\n|\\n/).join('\\n');\n        this.setState({\n          textfile: e.target.result\n        });\n      }; // console.log(\"files\",files)\n\n    };\n\n    this.GetComputerName = () => {\n      let npm = new NpmApi();\n      var view = npm.view('byUser');\n      var hostname = window.location.hostname;\n      console.log(\"view\", view, \"hostname\", hostname);\n      this.setState({\n        hostname: view\n      });\n    };\n\n    this.getips = async () => {\n      getFQDN().then(fqdn => console.log('fqdn', fqdn)).catch(console.error);\n    };\n\n    this.getData = async () => {\n      const res = await axios.get('https://geolocation-db.com/json/');\n      console.log(\"responce data\", res.data);\n      var windowhost = window.location.protocol + \"//\" + window.location.host;\n      let ab = document.location;\n      console.log(\"locotion\", document.location);\n      getFQDN((err, fqdn) => {\n        if (err) return console.error(err);\n        console.log('fqdn', fqdn);\n      }); // try {\n      //     var network = new ActiveXObject('WScript.Network');\n      //     // Show a pop up if it works\n      //     alert(network.computerName);\n      // }\n      // catch (e) { }\n\n      this.setState({\n        ipdaddress: res.data.IPv4,\n        hostname: windowhost,\n        systemhostname: ab.host\n      });\n    };\n  }\n\n  render() {\n    const {\n      textfile\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"get IP Address = \", this.state.ipdaddress, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 58\n          }, this), \"windowhost host name + window protocol =  \", this.state.hostname, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 76\n          }, this), \"system host name=  \", this.state.systemhostname2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 60\n          }, this), \"system host name2 =  \", this.state.systemhostname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getips,\n          children: \"get ipaddress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.GetComputerName,\n          children: \"get name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default fileupload;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/fileupload/fileupload.js"],"names":["React","Component","axios","getFQDN","require","NpmApi","fileupload","state","textfile","ipdaddress","hostname","systemhostname","systemhostname2","uploadfile","e","file","target","files","reder","FileReader","readAsText","onload","setState","result","GetComputerName","npm","view","window","location","console","log","getips","then","fqdn","catch","error","getData","res","get","data","windowhost","protocol","host","ab","document","err","IPv4","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nconst getFQDN = require('get-fqdn');\r\nvar NpmApi = require('npm-api');\r\nexport class fileupload extends Component {\r\n    state={\r\ntextfile:'',\r\nipdaddress:\"\",\r\nhostname:\"\",\r\nsystemhostname:\"\",\r\nsystemhostname2:\"\"\r\n\r\n    }\r\n    uploadfile=(e)=>{\r\n        let file=e.target.files;\r\n        let reder=new FileReader();\r\n        reder.readAsText(file[0]);\r\n        reder.onload=e=>{\r\n            // const file=e.target.result.split(/\\r\\n|\\n/).join('\\n');\r\n            this.setState({\r\n                textfile:e.target.result\r\n            })\r\n        }\r\n       \r\n        // console.log(\"files\",files)\r\n    }\r\n  \r\n    GetComputerName=()=>{\r\n        let npm = new NpmApi();\r\n        var view = npm.view('byUser');\r\n       var hostname= window.location.hostname\r\n        console.log(\"view\",view,\"hostname\",hostname)\r\n        this.setState({\r\n            hostname:view  \r\n        })\r\n      \r\n    }\r\n    //     getip =async() => {\r\n    //     try {\r\n    //       const fqdn = await getFQDN();\r\n    //       console.log('fqdn', fqdn);\r\n    //     } catch (err) {\r\n    //       console.error(err);\r\n    //     }\r\n    //   });\r\n\r\n\r\n      getips=async () => {\r\n          \r\n        getFQDN().then(fqdn => console.log('fqdn', fqdn)).catch(console.error);\r\n      };\r\n    \r\n\r\n\r\n    getData = async () => {\r\n\r\n        const res = await axios.get('https://geolocation-db.com/json/')\r\n        console.log(\"responce data\",res.data);\r\n        var windowhost   = window.location.protocol + \"//\" + window.location.host;\r\n        let ab=document.location;\r\n        console.log(\"locotion\",document.location)\r\n\r\n        getFQDN((err, fqdn) => {\r\n            if (err) return console.error(err);\r\n            console.log('fqdn', fqdn);\r\n          });\r\n\r\n       \r\n        // try {\r\n            \r\n        //     var network = new ActiveXObject('WScript.Network');\r\n        //     // Show a pop up if it works\r\n        //     alert(network.computerName);\r\n        // }\r\n        // catch (e) { }\r\n        \r\n        this.setState({\r\n            ipdaddress:res.data.IPv4,\r\n            hostname:windowhost,\r\n            systemhostname:ab.host\r\n        })\r\n \r\n        \r\n      }\r\n    render() {\r\n        const {textfile}=this.state\r\n        return (\r\n            <div>\r\n\r\n        {/* <div>\r\n            <h>File Upload</h>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <input type=\"file\" onChange={(e)=>this.uploadfile(e)}/>\r\n\r\n            </div>\r\n            <br/>\r\n            <hr style={{border:\"1.5px solid  green\"}}/>\r\n            <h1>Base 64</h1>\r\n                         <textarea\r\n                            className=\"form-control\"\r\n                            name=\"comments\"\r\n                            value={textfile}\r\n                            // id={index}\r\n                            // value={row.comments}\r\n                            // onChange={(e) => this.handlePatContChange(e)}\r\n                            rows={10}\r\n                            col={1}\r\n                          />\r\n        </div> */}\r\n\r\n        <div>\r\n            <h1>get IP Address = {this.state.ipdaddress} <br/>\r\n            windowhost host name + window protocol =  {this.state.hostname}<br/>\r\n            system host name=  {this.state.systemhostname2}<br/>\r\n            system host name2 =  {this.state.systemhostname}</h1> \r\n            <button onClick={this.getips}>get ipaddress</button>\r\n            <button onClick={this.GetComputerName}>get name</button>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}         \r\n    \r\n}\r\n\r\nexport default fileupload\r\n"]},"metadata":{},"sourceType":"module"}