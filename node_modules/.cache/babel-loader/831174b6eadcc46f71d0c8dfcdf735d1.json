{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\fileupload\\\\fileupload.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFQDN = require('get-fqdn');\n\nvar NpmApi = require('npm-api');\n\nexport class fileupload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textfile: '',\n      ipdaddress: \"\",\n      hostname: \"\",\n      systemhostname: \"\",\n      systemhostname2: \"\"\n    };\n\n    this.uploadfile = e => {\n      let file = e.target.files;\n      let reder = new FileReader();\n      reder.readAsText(file[0]);\n\n      reder.onload = e => {\n        // const file=e.target.result.split(/\\r\\n|\\n/).join('\\n');\n        this.setState({\n          textfile: e.target.result\n        });\n      }; // console.log(\"files\",files)\n\n    };\n\n    this.networkInfo = () => {\n      var wmi = new ActiveXObject(\"WbemScripting.SWbemLocator\");\n      var service = wmi.ConnectServer(\".\");\n      e = new Enumerator(service.ExecQuery(\"SELECT * FROM Win32_NetworkAdapterConfiguration WHERE IPEnabled = True\"));\n\n      for (; !e.atEnd(); e.moveNext()) {\n        var s = e.item();\n        var macAddress = unescape(s.MACAddress);\n      }\n\n      return macAddress;\n    };\n\n    this.GetComputerName = () => {//     let npm = new NpmApi();\n      //     var view = npm.view('byUser');\n      //    var hostname= window.location.hostname\n      //     console.log(\"view\",view,\"hostname\",hostname)\n      //     this.setState({\n      //         hostname:view  \n      //     }) \n    };\n\n    this.getips = async () => {\n      const res = await axios.get('https://geolocation-db.com/json/');\n      console.log(\"responce data\", res.data);\n      var windowhost = window.location.protocol + \"//\" + window.location.host;\n      let ab = document.location;\n      console.log(\"locotion\", document.location);\n      this.setState({\n        ipdaddress: res.data.IPv4,\n        hostname: windowhost,\n        systemhostname: ab.host\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.this.networkInfo());\n  }\n\n  render() {\n    const {\n      textfile\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"get IP Address = \", this.state.ipdaddress, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 58\n          }, this), \"windowhost host name + window protocol =  \", this.state.hostname, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 76\n          }, this), \"system host name=  \", this.state.systemhostname2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 60\n          }, this), \"system host name2 =  \", this.state.systemhostname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getips,\n          children: \"get ipaddress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.GetComputerName,\n          children: \"get name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default fileupload;","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/fileupload/fileupload.js"],"names":["React","Component","axios","getFQDN","require","NpmApi","fileupload","state","textfile","ipdaddress","hostname","systemhostname","systemhostname2","uploadfile","e","file","target","files","reder","FileReader","readAsText","onload","setState","result","networkInfo","wmi","ActiveXObject","service","ConnectServer","Enumerator","ExecQuery","atEnd","moveNext","s","item","macAddress","unescape","MACAddress","GetComputerName","getips","res","get","console","log","data","windowhost","window","location","protocol","host","ab","document","IPv4","componentDidMount","this","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nconst getFQDN = require('get-fqdn');\r\n\r\nvar NpmApi = require('npm-api');\r\nexport class fileupload extends Component {\r\n    state={\r\ntextfile:'',\r\nipdaddress:\"\",\r\nhostname:\"\",\r\nsystemhostname:\"\",\r\nsystemhostname2:\"\"\r\n\r\n    }\r\n    uploadfile=(e)=>{\r\n        let file=e.target.files;\r\n        let reder=new FileReader();\r\n        reder.readAsText(file[0]);\r\n        reder.onload=e=>{\r\n            // const file=e.target.result.split(/\\r\\n|\\n/).join('\\n');\r\n            this.setState({\r\n                textfile:e.target.result\r\n            })\r\n        }\r\n       \r\n        // console.log(\"files\",files)\r\n    }\r\n    networkInfo=()=>{\r\n\r\n        var wmi = new ActiveXObject (\"WbemScripting.SWbemLocator\");\r\n        var service = wmi.ConnectServer(\".\");\r\n        \r\n        \r\n        e = new Enumerator(service.ExecQuery(\"SELECT * FROM Win32_NetworkAdapterConfiguration WHERE IPEnabled = True\"));\r\n        \r\n        \r\n        for(; !e.atEnd(); e.moveNext()) {\r\n            var s = e.item();\r\n            var macAddress = unescape(s.MACAddress);\r\n        \r\n        }\r\n        \r\n        return macAddress;\r\n        }\r\n    componentDidMount(){\r\n        \r\n        console.log(this.this.networkInfo())\r\n    }\r\n  \r\n    GetComputerName=()=>{\r\n    //     let npm = new NpmApi();\r\n    //     var view = npm.view('byUser');\r\n    //    var hostname= window.location.hostname\r\n    //     console.log(\"view\",view,\"hostname\",hostname)\r\n    //     this.setState({\r\n    //         hostname:view  \r\n    //     }) \r\n    }\r\n\r\n    getips = async () => {\r\n        const res = await axios.get('https://geolocation-db.com/json/')\r\n        console.log(\"responce data\",res.data);\r\n        var windowhost   = window.location.protocol + \"//\" + window.location.host;\r\n        let ab=document.location;\r\n        console.log(\"locotion\",document.location)\r\n        this.setState({\r\n            ipdaddress:res.data.IPv4,\r\n            hostname:windowhost,\r\n            systemhostname:ab.host\r\n        })\r\n      }\r\n    render() {\r\n        const {textfile}=this.state\r\n        return (\r\n            <div>\r\n\r\n        \r\n        <div>\r\n            <h1>get IP Address = {this.state.ipdaddress} <br/>\r\n            windowhost host name + window protocol =  {this.state.hostname}<br/>\r\n            system host name=  {this.state.systemhostname2}<br/>\r\n            system host name2 =  {this.state.systemhostname}</h1> \r\n            <button onClick={this.getips}>get ipaddress</button>\r\n            <button onClick={this.GetComputerName}>get name</button>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}         \r\n    \r\n}\r\n\r\nexport default fileupload\r\n"]},"metadata":{},"sourceType":"module"}