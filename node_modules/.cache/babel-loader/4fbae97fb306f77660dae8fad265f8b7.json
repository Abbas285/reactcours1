{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LPT158\\\\Desktop\\\\New folder\\\\reactpro\\\\src\\\\componet\\\\multipleselect\\\\Timepicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport './TimePicker.css';\nimport useOutsideClick from './useOutsideClick.js'; // import Arrow_down from './Arrow_down.svg';\n// import Arrow_up from './Arrow_up.svg';\n\nimport Clock from \"./clock.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimePicker = props => {\n  _s();\n\n  const timePickerRef = useRef();\n  const inputRef = useRef();\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [hours, setHours] = useState('12');\n  const [minutes, setMinutes] = useState('00');\n  const [period, setPeriod] = useState('AM');\n  const [showError, setShowError] = useState(false);\n  const [styling, setStyling] = useState({});\n  const [allowMinuteInput, setAllowMinuteInput] = useState(false);\n  const [hrMinInputValue, setHrMinInputValue] = useState({\n    hour: '12',\n    minute: '00'\n  });\n  const [allowHourInput, setAllowHourInput] = useState(false); // **************************  CUSTOM HELPER FUNCTION START *************************\n\n  function toggleString(something, string1, string2) {\n    return something === string1 ? string2 : string1;\n  }\n\n  function formatTime(unit = \"\", time) {\n    if (timeFormat === 12) return `${unit === \"hr\" ? time : hours}:${unit === \"m\" ? time : minutes} ${period}`;\n    return `${hours}:${minutes}`;\n  }\n\n  function parsedTime(time, unit, timeFormat) {\n    if (unit === 'h') {\n      if (timeFormat === 12) {\n        let format12hr = {};\n\n        for (let i = 1; i <= 12; i++) {\n          switch (true) {\n            case i <= 9:\n              format12hr[i] = '0' + i;\n              break;\n\n            default:\n              format12hr[i] = i.toString();\n          }\n        }\n\n        if (time === 13) return format12hr[1];\n        if (time === 0) return format12hr[12];\n        return format12hr[time];\n      } else {\n        let format24hr = {};\n\n        for (let i = 1; i <= 24; i++) {\n          switch (true) {\n            case i <= 9:\n              format24hr[i] = '0' + i;\n              break;\n\n            case i === 24:\n              format24hr[i] = '00';\n              break;\n\n            default:\n              format24hr[i] = i.toString();\n          }\n        }\n\n        if (time === 0) return format24hr[24];\n        if (time === -1) return format24hr[23];\n        return format24hr[time];\n      }\n    } else {\n      let minutesObj = {};\n\n      for (let i = 1; i <= 60; i++) {\n        switch (true) {\n          case i <= 9:\n            minutesObj[i] = '0' + i;\n            break;\n\n          case i === 60:\n            minutesObj[i] = '00';\n            break;\n\n          default:\n            minutesObj[i] = i.toString();\n        }\n      }\n\n      if (time === 0) return minutesObj[60];\n      if (time === -1) return minutesObj[59];\n      return minutesObj[time];\n    }\n  }\n\n  const validateHhMm = (inputField, timeformat) => {\n    let isValid = null;\n\n    if (timeformat === 24) {\n      isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(inputField);\n    } else {\n      isValid = /^([0]\\d|[1][0-2]):([0-5]\\d)\\s?(?: AM|PM)$/i.test(inputField);\n    }\n\n    return isValid;\n  };\n\n  const validateMm = value => {\n    let isValid = null;\n    isValid = /^([0-5][0-9])?$/.test(value);\n    return isValid;\n  };\n\n  const validateHr = (value, timeFormat) => {\n    let isValid = null;\n\n    if (timeFormat === 24) {\n      isValid = /^([0-1]?[0-9]|2[0-4])?$/.test(value);\n    } else {\n      isValid = /^([0]\\d|[1][0-2])$/i.test(value);\n    }\n\n    return isValid;\n  };\n\n  const convert24hrTo12hr = time => {\n    // Check correct time format and split into components\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n    if (time.length > 1) {\n      // If time format correct\n      time = time.slice(1); // Remove full string match value\n\n      time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n\n    return time.join(''); // return adjusted time or original string\n  };\n\n  const ValidateInput = (event, command = 'Numeric', allowInput = '') => {\n    let allowedInputs = null;\n    if (allowInput.length > 0) allowedInputs = allowInput;\n    if (command === 'Numeric') allowedInputs = `0-9${allowedInputs}`;\n    if (command === 'Alpha') allowedInputs = `A-za-z${allowedInputs}`;\n    if (command === 'AlphaNumeric') allowedInputs = `A-za-z0-9${allowedInputs}`;\n    if (command === 'AlphaNumericSpecial') allowedInputs = `!@#$%^&*.<>,?/{};:|'\"()_+A-za-z0-9${allowedInputs}`;\n    if (command === 'SpecialChar') allowedInputs = `!@#$%^&*()_+${allowedInputs}`;\n    var regex = new RegExp(`^[${allowedInputs}]+$`);\n    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\n\n    if (!regex.test(key)) {\n      event.preventDefault();\n      return false;\n    } else {\n      return true;\n    }\n  }; // **************************  CUSTOM HELPER FUNCTION END *************************\n  // ************************** CHANGE HOURS FUNCTON *****************\n\n\n  const changeHours = action => {\n    let parsedhours = Number(hours);\n\n    if (action === 'ADD') {\n      parsedhours += 1;\n    } else {\n      parsedhours -= 1;\n    }\n\n    const parsedtime = parsedTime(parsedhours, 'h', timeFormat);\n    setHours(parsedtime);\n    setHrMinInputValue(prevhrmint => ({ ...prevhrmint,\n      hour: parsedtime\n    }));\n    props.changeTime(formatTime(\"hr\", parsedtime));\n  }; // ************************** CHANGE MINUTES FUNCTON *****************\n\n\n  const changeMinutes = action => {\n    let parsedminutes = Number(minutes);\n\n    if (action === 'ADD') {\n      parsedminutes += 1;\n    } else {\n      parsedminutes -= 1;\n    }\n\n    const parsedtime = parsedTime(parsedminutes, 'm', timeFormat);\n    setMinutes(parsedtime);\n    setHrMinInputValue(parsedtime);\n    props.changeTime(formatTime(\"m\", parsedtime));\n  }; // ************************** CHANGE PERIOD FUNCTON *****************\n\n\n  const changePeriod = () => {\n    setPeriod(toggleString(period, 'AM', 'PM'));\n  }; // ************************** UPDATE TIME FUNCTON *****************\n\n\n  const updateTime = () => {\n    const isValid = validateHhMm(formatTime(), timeFormat);\n    const isValidMint = validateMm(hrMinInputValue.minute);\n    const isValidHor = validateHr(hrMinInputValue.hour, timeFormat);\n\n    if (isValidMint && isValidHor) {\n      if (isValid) {\n        inputRef.current.style.border = '1px solid #4f4f4f';\n        props.changeTime(formatTime());\n        setShowError(false);\n      } else {\n        inputRef.current.style.border = '1px solid #f93154';\n        setShowError(true);\n      }\n\n      setShowTimePicker(false);\n    }\n  }; // ************************** HANDLE BLUR FUNCTION *****************\n\n\n  const handleBlur = e => {\n    const isValid = validateHhMm(e.target.value, timeFormat);\n\n    if (isValid) {\n      props.changeTime(e.target.value);\n      setShowError(false);\n      inputRef.current.style.border = '1px solid #4f4f4f';\n    } else {\n      inputRef.current.style.border = '1px solid #f93154';\n      setShowError(true);\n    }\n  }; // ************************************************************* MINUTE INPUT SECTION *******************************************************\n  // ************************** HANDLE MINUTE DOUBLE CLICK FUNCTION *************\n\n\n  const handleMinDbblClk = () => {\n    const isInputAllow = allowMinuteInput;\n\n    if (isInputAllow === false) {\n      setAllowMinuteInput(() => true);\n    }\n  }; // ************************** HANDLE MINUTE INPUT CHANGE FUNCTION *************\n\n\n  const handleMinInputChange = e => {\n    setHrMinInputValue(prevhrmint => ({ ...prevhrmint,\n      minute: e.target.value\n    }));\n  }; // **************************  MINUTE INPUT BLUR FUNCTION *************\n\n\n  const handleMinInputBlur = e => {\n    if (validateMm(e.target.value)) {\n      setMinutes(e.target.value);\n      setAllowMinuteInput(() => false);\n      e.target.style.border = \"none\";\n    } else {\n      e.target.style.border = \"1px solid red\";\n      e.target.focus();\n    }\n  }; // ************************************************************ HOUR INPUT SECTION *************************************\n  // ************************** HANDLE HOUR DOUBLE CLICK FUNCTION *************\n\n\n  const handleHorDbblClk = () => {\n    const isInputAllow = allowHourInput;\n\n    if (isInputAllow === false) {\n      setAllowHourInput(() => true);\n    }\n  }; // ************************** HANDLE HOUR INPUT CHANGE FUNCTION *************\n\n\n  const handleHorInputChange = e => {\n    setHrMinInputValue(prevhrmint => ({ ...prevhrmint,\n      hour: e.target.value\n    }));\n  }; // ************************** HOUR INPUT BLUR FUNCTION *************\n\n\n  const handleHorInputBlur = e => {\n    if (validateHr(e.target.value, timeFormat)) {\n      setHours(e.target.value);\n      setAllowHourInput(() => false);\n      e.target.style.border = \"none\";\n    } else {\n      e.target.style.border = \"1px solid red\";\n      e.target.focus();\n    }\n  }; // ************************** USEOUTSIDECLICK HOOK ******************\n\n\n  useOutsideClick(timePickerRef, () => {\n    const isValidMint = validateMm(hrMinInputValue.minute);\n    const isValidHor = validateHr(hrMinInputValue.hour, timeFormat);\n\n    if (isValidMint && isValidHor) {\n      if (showTimePicker) {\n        setShowTimePicker(false);\n      }\n    }\n  }); // ************************** USEMEMO HOOK ************************\n\n  const timeFormat = useMemo(() => props.timeFormat ? props.timeFormat : 12, [props.timeFormat]);\n  const size = useMemo(() => props.size ? props.size : 'XS', [props.size]);\n  const time = useMemo(() => props.time ? props.time : '12:00 AM', [props.time]);\n\n  const updateStyling = () => {\n    let styleObject = {};\n\n    if (size === 'XS') {\n      styleObject['timepickerwrapper_height'] = '50px';\n      styleObject['okbtn_fontSize'] = '0.7rem';\n      styleObject['okbtn_padding'] = '1px';\n      styleObject['timepickerdots_fontSize'] = '0.9rem';\n      styleObject['timepickerCurrent_fontSize'] = '0.8rem';\n      styleObject['timepickericon_width'] = '10px';\n      styleObject['iconup_top'] = '-12px';\n      styleObject['icondown_bottom'] = '-12px';\n    } else if (size === 'S') {\n      styleObject['timepickerwrapper_height'] = '60px';\n      styleObject['okbtn_fontSize'] = '0.9rem';\n      styleObject['okbtn_padding'] = '4px';\n      styleObject['timepickerdots_fontSize'] = '1.2rem';\n      styleObject['timepickerCurrent_fontSize'] = '1rem';\n      styleObject['timepickericon_width'] = '10px';\n      styleObject['iconup_top'] = '-12px';\n      styleObject['icondown_bottom'] = '-12px';\n    } else if (size === 'M') {\n      styleObject['timepickerwrapper_height'] = '70px';\n      styleObject['okbtn_fontSize'] = '1rem';\n      styleObject['okbtn_padding'] = '6px';\n      styleObject['timepickerdots_fontSize'] = '1.4rem';\n      styleObject['timepickerCurrent_fontSize'] = '1.5rem';\n      styleObject['timepickericon_width'] = '12px';\n      styleObject['iconup_top'] = '-15px';\n      styleObject['icondown_bottom'] = '-15px';\n    } else if (size === 'L') {\n      styleObject['timepickerwrapper_height'] = '80px';\n      styleObject['okbtn_fontSize'] = '1.2rem';\n      styleObject['okbtn_padding'] = '3px';\n      styleObject['timepickerdots_fontSize'] = '1.4rem';\n      styleObject['timepickerCurrent_fontSize'] = '1.5rem';\n      styleObject['timepickericon_width'] = '15px';\n      styleObject['iconup_top'] = '-18px';\n      styleObject['icondown_bottom'] = '-18px';\n    } else {\n      styleObject['timepickerwrapper_height'] = '60px';\n      styleObject['okbtn_fontSize'] = '0.7rem';\n      styleObject['okbtn_padding'] = '1px';\n      styleObject['timepickerdots_fontSize'] = '0.9rem';\n      styleObject['timepickerCurrent_fontSize'] = '1rem';\n      styleObject['timepickericon_width'] = '10px';\n      styleObject['iconup_top'] = '-12px';\n      styleObject['icondown_bottom'] = '-12px';\n    }\n\n    setStyling(styleObject);\n  }; // ************************** USE EFFECT HOOK ********************\n\n\n  useEffect(() => {\n    const isValid = validateHhMm(time, timeFormat);\n    inputRef.current.value = time;\n\n    if (isValid) {\n      const hours = time.substring(0, 2);\n      const minutes = time.substring(3, 5);\n      setHours(hours);\n      setMinutes(minutes);\n      setHrMinInputValue(prevhrmint => ({ ...prevhrmint,\n        minute: minutes,\n        hour: hours\n      }));\n\n      if (timeFormat === 12) {\n        const period = time.substring(6, 8);\n        setPeriod(period);\n      }\n    } else {\n      inputRef.current.style.border = '1px solid #f93154';\n      setShowError(true);\n    }\n  }, [time]);\n  useEffect(() => {\n    updateStyling();\n  }, []); // const changeWheel = (event) => {\n  //     if (event.deltaY < 0) {\n  //         console.log('scrolling up');\n  //         changeHours('ADD');\n  //     } else if (event.deltaY > 0) {\n  //         console.log('scrolling down');\n  //         changeHours('MINUS');\n  //     }\n  //     window.removeEventListener('scroll', () => { });\n  // };\n  // function disableScrolling() {\n  //     var x = window.scrollX;\n  //     var y = window.scrollY;\n  //     window.onscroll = function () {\n  //         window.scrollTo(x, y);\n  //     };\n  //     console.log('disable');\n  // }\n  // function enableScrolling() {\n  //     window.onscroll = function () { };\n  //     console.log('ENABLED');\n  // }\n  // const changeMouseEnter = () => {\n  //     disableScrolling();\n  // };\n  // const changeMouseLeave = () => {\n  //     enableScrolling();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-outline\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      onBlur: e => handleBlur(e),\n      className: \"timepicker-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowTimePicker(!showTimePicker),\n      id: \"timepicker-toggle-371513\",\n      type: \"button\",\n      className: \"timepicker-toggle-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Clock,\n        alt: \"clock_icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), showError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errordiv\",\n      children: \"Invalid Time Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 27\n    }, this), showTimePicker && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timepicker-wrapper\",\n      style: {\n        height: styling.timepickerwrapper_height\n      },\n      ref: timePickerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tp_row tp_h-100 tp_w-100  g-0 tp_justify-content-center tp_align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tp_col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tp_row g-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tp_col-5 tp_d-flex tp_justify-content-center tp_align-items-center tp_position-relative  \",\n              children: [allowHourInput === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timepicker_wrapper_icon\",\n                style: {\n                  top: styling.iconup_top\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => changeHours('ADD'),\n                  class: \"fa fa-chevron-up fontsize12 chevroncolor\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tp_text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onBlur: handleHorInputBlur,\n                  onKeyPress: e => ValidateInput(e, 'Numeric'),\n                  onChange: handleHorInputChange,\n                  onDoubleClick: handleHorDbblClk,\n                  readOnly: !allowHourInput,\n                  value: hrMinInputValue.hour,\n                  className: \"hours_minute_input\",\n                  style: {\n                    fontSize: styling.timepickerCurrent_fontSize\n                  },\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 37\n              }, this), allowHourInput === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timepicker_wrapper_icon\",\n                style: {\n                  bottom: styling.icondown_bottom\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => changeHours('MINUS'),\n                  class: \"fa fa-chevron-down fontsize12 chevroncolor\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tp_col-2 tp_d-flex  tp_justify-content-center tp_align-items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"timepicker-dots\",\n                style: {\n                  fontSize: styling.timepickerdots_fontSize\n                },\n                children: \":\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tp_col-5 tp_d-flex tp_justify-content-center tp_align-items-center tp_position-relative  \",\n              children: [allowMinuteInput === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timepicker_wrapper_icon\",\n                style: {\n                  top: styling.iconup_top\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => changeMinutes('ADD'),\n                  class: \"fa fa-chevron-up fontsize12 chevroncolor paddingleft8\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tp_text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onBlur: handleMinInputBlur,\n                  onKeyPress: e => ValidateInput(e, 'Numeric'),\n                  onChange: handleMinInputChange,\n                  onDoubleClick: handleMinDbblClk,\n                  readOnly: !allowMinuteInput,\n                  value: hrMinInputValue.minute,\n                  className: \"hours_minute_input\",\n                  style: {\n                    fontSize: styling.timepickerCurrent_fontSize\n                  },\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 37\n              }, this), allowMinuteInput === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timepicker_wrapper_icon\",\n                style: {\n                  bottom: styling.icondown_bottom\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => changeMinutes('MINUS'),\n                  class: \"fa fa-chevron-down fontsize12 chevroncolor\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tp_col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tp_row tp_justify-content-evenly\",\n            children: [timeFormat === 12 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tp_col-5  tp_d-flex tp_justify-content-center tp_align-items-center tp_position-relative  \",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timepicker_wrapper_icon\",\n                style: {\n                  top: styling.iconup_top\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: changePeriod,\n                  class: \"fa fa-chevron-up fontsize12 chevroncolor\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"timepicker-current\",\n                  style: {\n                    fontSize: styling.timepickerCurrent_fontSize\n                  },\n                  children: period\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timepicker_wrapper_icon \",\n                style: {\n                  bottom: styling.icondown_bottom\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: changePeriod,\n                  class: \"fa fa-chevron-down fontsize12 chevroncolor\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tp_col-3 tp_d-flex tp_justify-content-center tp_align-items-center  \",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"ok_btn\",\n                  style: {\n                    fontSize: styling.okbtn_fontSize,\n                    padding: styling.okbtn_padding\n                  },\n                  onClick: updateTime,\n                  children: \"OK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TimePicker, \"2c4qruxiPamxaO4k+1d0GJ3gxnk=\", false, function () {\n  return [useOutsideClick];\n});\n\n_c = TimePicker;\nexport default _c2 = /*#__PURE__*/React.memo(TimePicker);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TimePicker\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/LPT158/Desktop/New folder/reactpro/src/componet/multipleselect/Timepicker.js"],"names":["React","useEffect","useState","useRef","useMemo","useOutsideClick","TimePicker","props","timePickerRef","inputRef","showTimePicker","setShowTimePicker","hours","setHours","minutes","setMinutes","period","setPeriod","showError","setShowError","styling","setStyling","allowMinuteInput","setAllowMinuteInput","hrMinInputValue","setHrMinInputValue","hour","minute","allowHourInput","setAllowHourInput","toggleString","something","string1","string2","formatTime","unit","time","timeFormat","parsedTime","format12hr","i","toString","format24hr","minutesObj","validateHhMm","inputField","timeformat","isValid","test","validateMm","value","validateHr","convert24hrTo12hr","match","length","slice","join","ValidateInput","event","command","allowInput","allowedInputs","regex","RegExp","key","String","fromCharCode","charCode","which","preventDefault","changeHours","action","parsedhours","Number","parsedtime","prevhrmint","changeTime","changeMinutes","parsedminutes","changePeriod","updateTime","isValidMint","isValidHor","current","style","border","handleBlur","e","target","handleMinDbblClk","isInputAllow","handleMinInputChange","handleMinInputBlur","focus","handleHorDbblClk","handleHorInputChange","handleHorInputBlur","size","updateStyling","styleObject","substring","Clock","height","timepickerwrapper_height","top","iconup_top","fontSize","timepickerCurrent_fontSize","bottom","icondown_bottom","timepickerdots_fontSize","okbtn_fontSize","padding","okbtn_padding","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\r\nimport './TimePicker.css';\r\nimport useOutsideClick from './useOutsideClick.js';\r\n// import Arrow_down from './Arrow_down.svg';\r\n// import Arrow_up from './Arrow_up.svg';\r\n import Clock from './clock.svg';    \r\n\r\n\r\nconst TimePicker = (props) => {\r\n    const timePickerRef = useRef();\r\n    const inputRef = useRef();\r\n    const [showTimePicker, setShowTimePicker] = useState(false);\r\n    const [hours, setHours] = useState('12');\r\n    const [minutes, setMinutes] = useState('00');\r\n    const [period, setPeriod] = useState('AM');\r\n    const [showError, setShowError] = useState(false);\r\n    const [styling, setStyling] = useState({});\r\n    const [allowMinuteInput, setAllowMinuteInput] = useState(false);\r\n    const [hrMinInputValue, setHrMinInputValue] = useState({ hour: '12', minute: '00' });\r\n    const [allowHourInput, setAllowHourInput] = useState(false);\r\n\r\n\r\n    // **************************  CUSTOM HELPER FUNCTION START *************************\r\n    function toggleString(something, string1, string2) {\r\n        return something === string1 ? string2 : string1;\r\n    }\r\n\r\n    function formatTime(unit = \"\", time) {\r\n        if (timeFormat === 12) return `${unit === \"hr\" ? time : hours}:${unit === \"m\" ? time : minutes} ${period}`;\r\n        return `${hours}:${minutes}`;\r\n    }\r\n\r\n    function parsedTime(time, unit, timeFormat) {\r\n        if (unit === 'h') {\r\n            if (timeFormat === 12) {\r\n                let format12hr = {};\r\n                for (let i = 1; i <= 12; i++) {\r\n                    switch (true) {\r\n                        case i <= 9:\r\n                            format12hr[i] = '0' + i;\r\n                            break;\r\n                        default:\r\n                            format12hr[i] = i.toString();\r\n                    }\r\n                }\r\n\r\n                if (time === 13) return format12hr[1];\r\n                if (time === 0) return format12hr[12];\r\n                return format12hr[time];\r\n            } else {\r\n                let format24hr = {};\r\n                for (let i = 1; i <= 24; i++) {\r\n                    switch (true) {\r\n                        case i <= 9:\r\n                            format24hr[i] = '0' + i;\r\n                            break;\r\n                        case i === 24:\r\n                            format24hr[i] = '00';\r\n                            break;\r\n                        default:\r\n                            format24hr[i] = i.toString();\r\n                    }\r\n                }\r\n                if (time === 0) return format24hr[24];\r\n                if (time === -1) return format24hr[23];\r\n                return format24hr[time];\r\n            }\r\n        } else {\r\n            let minutesObj = {};\r\n            for (let i = 1; i <= 60; i++) {\r\n                switch (true) {\r\n                    case i <= 9:\r\n                        minutesObj[i] = '0' + i;\r\n                        break;\r\n                    case i === 60:\r\n                        minutesObj[i] = '00';\r\n                        break;\r\n                    default:\r\n                        minutesObj[i] = i.toString();\r\n                }\r\n            }\r\n            if (time === 0) return minutesObj[60];\r\n            if (time === -1) return minutesObj[59];\r\n            return minutesObj[time];\r\n        }\r\n    }\r\n    \r\n\r\n    const validateHhMm = (inputField, timeformat) => {\r\n        let isValid = null;\r\n        if (timeformat === 24) {\r\n            isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(\r\n                inputField\r\n            );\r\n        } else {\r\n            isValid = /^([0]\\d|[1][0-2]):([0-5]\\d)\\s?(?: AM|PM)$/i.test(inputField);\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    const validateMm = (value) => {\r\n        let isValid = null;\r\n        isValid = /^([0-5][0-9])?$/.test(value);\r\n        return isValid\r\n    }\r\n\r\n    const validateHr = (value, timeFormat) => {\r\n        let isValid = null;\r\n        if (timeFormat === 24) {\r\n            isValid = /^([0-1]?[0-9]|2[0-4])?$/.test(value);\r\n        } else {\r\n            isValid = /^([0]\\d|[1][0-2])$/i.test(value);\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n\r\n    const convert24hrTo12hr = (time) => {\r\n        // Check correct time format and split into components\r\n        time = time\r\n            .toString()\r\n            .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) {\r\n            // If time format correct\r\n            time = time.slice(1); // Remove full string match value\r\n            time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n            time[0] = +time[0] % 12 || 12; // Adjust hours\r\n        }\r\n        return time.join(''); // return adjusted time or original string\r\n    };\r\n\r\n    const ValidateInput = (event, command = 'Numeric', allowInput = '') => {\r\n        let allowedInputs = null;\r\n\r\n        if (allowInput.length > 0) allowedInputs = allowInput;\r\n        if (command === 'Numeric') allowedInputs = `0-9${allowedInputs}`;\r\n        if (command === 'Alpha') allowedInputs = `A-za-z${allowedInputs}`;\r\n        if (command === 'AlphaNumeric') allowedInputs = `A-za-z0-9${allowedInputs}`;\r\n        if (command === 'AlphaNumericSpecial')\r\n            allowedInputs = `!@#$%^&*.<>,?/{};:|'\"()_+A-za-z0-9${allowedInputs}`;\r\n        if (command === 'SpecialChar') allowedInputs = `!@#$%^&*()_+${allowedInputs}`;\r\n        var regex = new RegExp(`^[${allowedInputs}]+$`);\r\n        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n        if (!regex.test(key)) {\r\n            event.preventDefault();\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    // **************************  CUSTOM HELPER FUNCTION END *************************\r\n\r\n    // ************************** CHANGE HOURS FUNCTON *****************\r\n    const changeHours = (action) => {\r\n        let parsedhours = Number(hours);\r\n        if (action === 'ADD') {\r\n            parsedhours += 1;\r\n        } else {\r\n            parsedhours -= 1;\r\n        }\r\n        const parsedtime = parsedTime(parsedhours, 'h', timeFormat)\r\n        setHours(parsedtime);\r\n        setHrMinInputValue((prevhrmint) => ({ ...prevhrmint, hour: parsedtime }))\r\n        props.changeTime(formatTime(\"hr\", parsedtime))\r\n    };\r\n\r\n    // ************************** CHANGE MINUTES FUNCTON *****************\r\n    const changeMinutes = (action) => {\r\n        let parsedminutes = Number(minutes);\r\n        if (action === 'ADD') {\r\n            parsedminutes += 1;\r\n        } else {\r\n            parsedminutes -= 1;\r\n        }\r\n        const parsedtime = parsedTime(parsedminutes, 'm', timeFormat)\r\n        setMinutes(parsedtime);\r\n        setHrMinInputValue(parsedtime)\r\n        props.changeTime(formatTime(\"m\", parsedtime))\r\n    };\r\n\r\n    // ************************** CHANGE PERIOD FUNCTON *****************\r\n    const changePeriod = () => {\r\n        setPeriod(toggleString(period, 'AM', 'PM'));\r\n    };\r\n\r\n    // ************************** UPDATE TIME FUNCTON *****************\r\n    const updateTime = () => {\r\n        const isValid = validateHhMm(formatTime(), timeFormat);\r\n        const isValidMint = validateMm(hrMinInputValue.minute);\r\n        const isValidHor = validateHr(hrMinInputValue.hour, timeFormat);\r\n        if (isValidMint && isValidHor) {\r\n            if (isValid) {\r\n                inputRef.current.style.border = '1px solid #4f4f4f';\r\n                props.changeTime(formatTime());\r\n                setShowError(false);\r\n            } else {\r\n                inputRef.current.style.border = '1px solid #f93154';\r\n                setShowError(true);\r\n            }\r\n            setShowTimePicker(false);\r\n        }\r\n    };\r\n\r\n    // ************************** HANDLE BLUR FUNCTION *****************\r\n    const handleBlur = (e) => {\r\n        const isValid = validateHhMm(e.target.value, timeFormat);\r\n        if (isValid) {\r\n            props.changeTime(e.target.value);\r\n            setShowError(false);\r\n            inputRef.current.style.border = '1px solid #4f4f4f';\r\n        } else {\r\n            inputRef.current.style.border = '1px solid #f93154';\r\n            setShowError(true);\r\n        }\r\n    };\r\n    // ************************************************************* MINUTE INPUT SECTION *******************************************************\r\n    // ************************** HANDLE MINUTE DOUBLE CLICK FUNCTION *************\r\n    const handleMinDbblClk = () => {\r\n        const isInputAllow = allowMinuteInput\r\n        if (isInputAllow === false) {\r\n            setAllowMinuteInput(() => true)\r\n        }\r\n    }\r\n\r\n    // ************************** HANDLE MINUTE INPUT CHANGE FUNCTION *************\r\n    const handleMinInputChange = (e) => {\r\n        setHrMinInputValue((prevhrmint) => ({ ...prevhrmint, minute: e.target.value }))\r\n    }\r\n\r\n    // **************************  MINUTE INPUT BLUR FUNCTION *************\r\n    const handleMinInputBlur = (e) => {\r\n        if (validateMm(e.target.value)) {\r\n            setMinutes(e.target.value)\r\n            setAllowMinuteInput(() => false)\r\n            e.target.style.border = \"none\";\r\n        }\r\n        else {\r\n            e.target.style.border = \"1px solid red\";\r\n            e.target.focus()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // ************************************************************ HOUR INPUT SECTION *************************************\r\n    // ************************** HANDLE HOUR DOUBLE CLICK FUNCTION *************\r\n    const handleHorDbblClk = () => {\r\n        const isInputAllow = allowHourInput\r\n        if (isInputAllow === false) {\r\n            setAllowHourInput(() => true)\r\n        }\r\n    }\r\n\r\n    // ************************** HANDLE HOUR INPUT CHANGE FUNCTION *************\r\n    const handleHorInputChange = (e) => {\r\n        setHrMinInputValue((prevhrmint) => ({ ...prevhrmint, hour: e.target.value }))\r\n    }\r\n\r\n    // ************************** HOUR INPUT BLUR FUNCTION *************\r\n    const handleHorInputBlur = (e) => {\r\n        if (validateHr(e.target.value, timeFormat)) {\r\n            setHours(e.target.value)\r\n            setAllowHourInput(() => false)\r\n            e.target.style.border = \"none\";\r\n        }\r\n        else {\r\n            e.target.style.border = \"1px solid red\";\r\n            e.target.focus()\r\n        }\r\n    }\r\n    // ************************** USEOUTSIDECLICK HOOK ******************\r\n    useOutsideClick(timePickerRef, () => {\r\n        const isValidMint = validateMm(hrMinInputValue.minute);\r\n        const isValidHor = validateHr(hrMinInputValue.hour, timeFormat);\r\n        if (isValidMint && isValidHor) {\r\n            if (showTimePicker) {\r\n                setShowTimePicker(false);\r\n            }\r\n        }\r\n    });\r\n\r\n    // ************************** USEMEMO HOOK ************************\r\n    const timeFormat = useMemo(\r\n        () => (props.timeFormat ? props.timeFormat : 12),\r\n        [props.timeFormat]\r\n    );\r\n    const size = useMemo(() => (props.size ? props.size : 'XS'), [props.size]);\r\n    const time = useMemo(\r\n        () => (props.time ? props.time : '12:00 AM'),\r\n        [props.time]\r\n    );\r\n    const updateStyling = () => {\r\n        let styleObject = {};\r\n        if (size === 'XS') {\r\n            styleObject['timepickerwrapper_height'] = '50px';\r\n            styleObject['okbtn_fontSize'] = '0.7rem';\r\n            styleObject['okbtn_padding'] = '1px';\r\n            styleObject['timepickerdots_fontSize'] = '0.9rem';\r\n\r\n            styleObject['timepickerCurrent_fontSize'] = '0.8rem';\r\n            styleObject['timepickericon_width'] = '10px';\r\n            styleObject['iconup_top'] = '-12px';\r\n            styleObject['icondown_bottom'] = '-12px';\r\n        } else if (size === 'S') {\r\n            styleObject['timepickerwrapper_height'] = '60px';\r\n\r\n            styleObject['okbtn_fontSize'] = '0.9rem';\r\n            styleObject['okbtn_padding'] = '4px';\r\n            styleObject['timepickerdots_fontSize'] = '1.2rem';\r\n\r\n            styleObject['timepickerCurrent_fontSize'] = '1rem';\r\n            styleObject['timepickericon_width'] = '10px';\r\n            styleObject['iconup_top'] = '-12px';\r\n            styleObject['icondown_bottom'] = '-12px';\r\n        } else if (size === 'M') {\r\n            styleObject['timepickerwrapper_height'] = '70px';\r\n\r\n            styleObject['okbtn_fontSize'] = '1rem';\r\n            styleObject['okbtn_padding'] = '6px';\r\n            styleObject['timepickerdots_fontSize'] = '1.4rem';\r\n\r\n            styleObject['timepickerCurrent_fontSize'] = '1.5rem';\r\n            styleObject['timepickericon_width'] = '12px';\r\n            styleObject['iconup_top'] = '-15px';\r\n            styleObject['icondown_bottom'] = '-15px';\r\n        } else if (size === 'L') {\r\n            styleObject['timepickerwrapper_height'] = '80px';\r\n\r\n            styleObject['okbtn_fontSize'] = '1.2rem';\r\n            styleObject['okbtn_padding'] = '3px';\r\n            styleObject['timepickerdots_fontSize'] = '1.4rem';\r\n\r\n            styleObject['timepickerCurrent_fontSize'] = '1.5rem';\r\n            styleObject['timepickericon_width'] = '15px';\r\n            styleObject['iconup_top'] = '-18px';\r\n            styleObject['icondown_bottom'] = '-18px';\r\n        } else {\r\n            styleObject['timepickerwrapper_height'] = '60px';\r\n\r\n            styleObject['okbtn_fontSize'] = '0.7rem';\r\n            styleObject['okbtn_padding'] = '1px';\r\n            styleObject['timepickerdots_fontSize'] = '0.9rem';\r\n            styleObject['timepickerCurrent_fontSize'] = '1rem';\r\n            styleObject['timepickericon_width'] = '10px';\r\n            styleObject['iconup_top'] = '-12px';\r\n            styleObject['icondown_bottom'] = '-12px';\r\n        }\r\n        setStyling(styleObject);\r\n    };\r\n\r\n    // ************************** USE EFFECT HOOK ********************\r\n\r\n    useEffect(() => {\r\n        const isValid = validateHhMm(time, timeFormat);\r\n        inputRef.current.value = time;\r\n        if (isValid) {\r\n            const hours = time.substring(0, 2);\r\n            const minutes = time.substring(3, 5);\r\n            setHours(hours);\r\n            setMinutes(minutes);\r\n            setHrMinInputValue((prevhrmint) => ({ ...prevhrmint, minute: minutes, hour: hours }))\r\n            if (timeFormat === 12) {\r\n                const period = time.substring(6, 8);\r\n                setPeriod(period);\r\n            }\r\n        } else {\r\n            inputRef.current.style.border = '1px solid #f93154';\r\n            setShowError(true);\r\n        }\r\n    }, [time]);\r\n    useEffect(() => {\r\n        updateStyling();\r\n    }, []);\r\n\r\n    // const changeWheel = (event) => {\r\n    //     if (event.deltaY < 0) {\r\n    //         console.log('scrolling up');\r\n    //         changeHours('ADD');\r\n    //     } else if (event.deltaY > 0) {\r\n    //         console.log('scrolling down');\r\n    //         changeHours('MINUS');\r\n    //     }\r\n    //     window.removeEventListener('scroll', () => { });\r\n    // };\r\n\r\n    // function disableScrolling() {\r\n    //     var x = window.scrollX;\r\n    //     var y = window.scrollY;\r\n    //     window.onscroll = function () {\r\n    //         window.scrollTo(x, y);\r\n    //     };\r\n    //     console.log('disable');\r\n    // }\r\n    // function enableScrolling() {\r\n    //     window.onscroll = function () { };\r\n    //     console.log('ENABLED');\r\n    // }\r\n    // const changeMouseEnter = () => {\r\n    //     disableScrolling();\r\n    // };\r\n\r\n    // const changeMouseLeave = () => {\r\n    //     enableScrolling();\r\n    // };\r\n\r\n    return (\r\n        <div className=\"form-outline\">\r\n            <input type=\"text\" ref={inputRef} onBlur={(e) => handleBlur(e)} className=\"timepicker-input\" />\r\n            <button onClick={() => setShowTimePicker(!showTimePicker)} id=\"timepicker-toggle-371513\" type=\"button\" className=\"timepicker-toggle-button\" >\r\n                <img src={Clock} alt=\"clock_icon\" />\r\n            </button>\r\n            {showError && <div className=\"errordiv\">Invalid Time Format</div>}\r\n            {showTimePicker && (\r\n                <div className=\"timepicker-wrapper\" style={{ height: styling.timepickerwrapper_height }} ref={timePickerRef}>\r\n                    <div className=\"tp_row tp_h-100 tp_w-100  g-0 tp_justify-content-center tp_align-items-center\">\r\n                        <div className=\"tp_col-6\">\r\n                            <div className=\"tp_row g-0\">\r\n                                <div className=\"tp_col-5 tp_d-flex tp_justify-content-center tp_align-items-center tp_position-relative  \">\r\n                                    {allowHourInput === false && (\r\n                                        <div className=\"timepicker_wrapper_icon\" style={{ top: styling.iconup_top }}>\r\n                                            <i onClick={() => changeHours('ADD')} class=\"fa fa-chevron-up fontsize12 chevroncolor\" aria-hidden=\"true\"></i>\r\n                                            {/* <img src={Arrow_up} className=\"timepicker_icon\" style={{ width: styling.timepickericon_width }} alt=\"arrow_up\" onClick={() => changeHours('ADD')} /> */}\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"tp_text-center\">\r\n                                        {/* <button className=\"timepicker-current\" style={{ fontSize: styling.timepickerCurrent_fontSize }}>\r\n                                            {hours}\r\n                                        </button> */}\r\n                                        <input onBlur={handleHorInputBlur} onKeyPress={(e) => ValidateInput(e, 'Numeric')} onChange={handleHorInputChange} onDoubleClick={handleHorDbblClk} readOnly={!allowHourInput} value={hrMinInputValue.hour} className=\"hours_minute_input\" style={{ fontSize: styling.timepickerCurrent_fontSize }} type=\"text\" />\r\n                                    </div>\r\n\r\n                                    {allowHourInput === false && (\r\n                                        <div className=\"timepicker_wrapper_icon\" style={{ bottom: styling.icondown_bottom }} >\r\n                                            <i onClick={() => changeHours('MINUS')} class=\"fa fa-chevron-down fontsize12 chevroncolor\" aria-hidden=\"true\"></i>\r\n                                            {/* <img src={Arrow_down} className=\"timepicker_icon\" style={{ width: styling.timepickericon_width }} alt=\"arrow_down\" onClick={() => changeHours('MINUS')} /> */}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"tp_col-2 tp_d-flex  tp_justify-content-center tp_align-items-center\">\r\n                                    <p className=\"timepicker-dots\" style={{ fontSize: styling.timepickerdots_fontSize }}>\r\n                                        :\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"tp_col-5 tp_d-flex tp_justify-content-center tp_align-items-center tp_position-relative  \">\r\n                                    {allowMinuteInput === false && (\r\n                                        <div className=\"timepicker_wrapper_icon\" style={{ top: styling.iconup_top }} >\r\n                                            <i onClick={() => changeMinutes('ADD')} class=\"fa fa-chevron-up fontsize12 chevroncolor paddingleft8\" aria-hidden=\"true\"></i>\r\n                                            {/* <img src={Arrow_up} className=\"timepicker_icon\" style={{ width: styling.timepickericon_width }} alt=\"arrow_up\" onClick={() => changeMinutes('ADD')} /> */}\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    <div className=\"tp_text-center\">\r\n                                        {/* <button className=\"timepicker-current\" style={{ fontSize: styling.timepickerCurrent_fontSize }} >\r\n                                            {minutes}\r\n                                        </button> */}\r\n                                        <input onBlur={handleMinInputBlur} onKeyPress={(e) => ValidateInput(e, 'Numeric')} onChange={handleMinInputChange} onDoubleClick={handleMinDbblClk} readOnly={!allowMinuteInput} value={hrMinInputValue.minute} className=\"hours_minute_input\" style={{ fontSize: styling.timepickerCurrent_fontSize }} type=\"text\" />\r\n                                    </div>\r\n                                    {allowMinuteInput === false && (\r\n                                        <div className=\"timepicker_wrapper_icon\" style={{ bottom: styling.icondown_bottom }} >\r\n                                            <i onClick={() => changeMinutes('MINUS')} class=\"fa fa-chevron-down fontsize12 chevroncolor\" aria-hidden=\"true\"></i>\r\n                                            {/* <img src={Arrow_down} alt=\"arrow_down\" className=\"timepicker_icon\" style={{ width: styling.timepickericon_width }} onClick={() => changeMinutes('MINUS')} /> */}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tp_col-6\">\r\n                            <div className=\"tp_row tp_justify-content-evenly\">\r\n                                {timeFormat === 12 && (\r\n                                    <div className=\"tp_col-5  tp_d-flex tp_justify-content-center tp_align-items-center tp_position-relative  \">\r\n                                        <div className=\"timepicker_wrapper_icon\" style={{ top: styling.iconup_top }}>\r\n                                            <i onClick={changePeriod} class=\"fa fa-chevron-up fontsize12 chevroncolor\" aria-hidden=\"true\"></i>\r\n                                            {/* <img src={Arrow_up} className=\"timepicker_icon\" style={{ width: styling.timepickericon_width }} alt=\"arrow_up\" onClick={changePeriod} /> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button className=\"timepicker-current\" style={{ fontSize: styling.timepickerCurrent_fontSize }} >\r\n                                                {period}\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        <div className=\"timepicker_wrapper_icon \" style={{ bottom: styling.icondown_bottom }} >\r\n                                            <i onClick={changePeriod} class=\"fa fa-chevron-down fontsize12 chevroncolor\" aria-hidden=\"true\"></i>\r\n                                            {/* <img src={Arrow_down} alt=\"arrow_down\" className=\"timepicker_icon\" style={{ width: styling.timepickericon_width }} onClick={changePeriod} /> */}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"tp_col-3 tp_d-flex tp_justify-content-center tp_align-items-center  \">\r\n                                    <div>\r\n                                        <button className=\"ok_btn\" style={{ fontSize: styling.okbtn_fontSize, padding: styling.okbtn_padding, }} onClick={updateTime}>\r\n                                            OK\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TimePicker);\r\n"]},"metadata":{},"sourceType":"module"}